
// Spacing between components
@mixin component-margin-top(){
  margin-top: $component-spacing-mobile;
  @if $component-spacing-mobile != $component-spacing-desktop {
    @include breakpoint($component-spacing-breakpoint) {
      margin-top: $component-spacing-desktop;
    }
  }
}

// Same as component-margin-top(), but for situations where it's needed on the bottom side for reasons.
@mixin component-margin-bottom(){
  margin-bottom: $component-spacing-mobile;
  @if $component-spacing-mobile != $component-spacing-desktop {
    @include breakpoint($component-spacing-breakpoint) {
      margin-bottom: $component-spacing-desktop;
    }
  }
}

// Padding that prevents components from touching the side of browser on narrow sizes
@mixin component-side-padding() {
  padding-left: $component-side-padding-mobile;
  padding-right: $component-side-padding-mobile;

  @if $component-side-padding-mobile != $component-side-padding-desktop {
    @include breakpoint($component-spacing-breakpoint) {
      padding-left: $component-side-padding-desktop;
      padding-right: $component-side-padding-desktop;
    }
  }
}

// Max width for component containers and elements emulating them
@mixin components-container-max-width() {
  max-width: $component-side-padding-mobile + $content-area-wrapper-width-max + $component-side-padding-mobile;
  @if $component-side-padding-mobile != $component-side-padding-desktop {
    @include breakpoint($component-spacing-breakpoint) {
      max-width: $component-side-padding-desktop + $content-area-wrapper-width-max + $component-side-padding-desktop;
    }
  }
}
