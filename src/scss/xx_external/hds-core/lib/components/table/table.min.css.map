{"version":3,"sources":["../../../src/utils/_bem.scss","../../../src/components/table/table.scss","../../../src/components/table/_table-mixin.scss"],"names":[],"mappings":"AAoFM,WCnFN,6CCEE,CAEA,wBAAA,CACA,eAAA,CACA,UDFF,CCIE,qBACE,eDFJ,CCKE,2BACE,4CDHJ,CCME,cACE,6CAAA,CAEA,eAAA,CACA,+BAAA,CAEA,eAAA,CACA,kBDJJ,CCOE,wCARE,gCAAA,CAGA,0CDOJ,CCFE,0BACE,gDAAA,CACA,6CAAA,CACA,2BAAA,CAEA,eAAA,CACA,gBDJJ,CCQE,uBACE,+CDNJ,CCiCE,4CACE,gBD9BJ,CDwIM,oBErGJ,gCAAA,CACA,eAAA,CACA,+BAAA,CACA,8BAAA,CACA,eD/BF,CCoCE,iBACE,0CDjCJ,CCoCE,8BACE,wBDlCJ,CCuCE,kBACE,6CDpCJ,CCuCE,+BACE,2BDrCJ,CCuEE,oDACE,2CDpEJ,CCsEI,uDACE,4CDpEN,CCwEE,uDACE,oDAAA,CACA,qDDtEJ,CC+BE,+BAEE,eD3BJ,CC8BE,2EAJE,gCAAA,CAEA,4BDxBJ,CC8BE,sCACE,gCAAA,CACA,+BAAA,CACA,+BD5BJ,CCkCI,4CACE,kBD/BN,CCkCI,0DACE,sCDhCN,CCqDE,mCACE,+CDlDJ,CCyDE,2KACE,gBDpDJ,CD0DM,6BEDJ,gBDrDF,CC9DE,yBACE,cAEE,eDkEJ,CC9DE,wCALE,gCAAA,CAEA,4BDqEJ,CC7DE,oBACE,qCAAA,CACA,mBAAA,CACA,+BAAA,CACA,+BD+DJ,CACF","file":"table.min.css","sourcesContent":["@use \"sass:string\";\n\n$blockPrefix: 'hds-';\n$modifierDelimeter: '--';\n$elementDelimeter: '__';\n\n// Copied from https://github.com/Shudrum/sass-easy-bem\n// The module was added to root/node_modules, so SASS cannot find it from core.\n\n// Copyright (c) 2018-2019 Julien Martin.\n// This source code is licensed under the MIT license found in the\n// LICENSE file in the root directory of this source tree.\n\n// Utility functions\n\n@function get-parent-selector($selector) {\n  $parent: null;\n\n  @while string.index('#{$selector}', ' ') {\n    $first-element: string.slice('#{$selector}', 0, string.index('#{$selector}', ' ') - 1);\n\n    @if $parent {\n      $parent: '#{$parent} #{$first-element}';\n    } @else {\n      $parent: $first-element;\n    }\n\n    $selector: string.slice('#{$selector}', string.index('#{$selector}', ' ') + 1);\n  }\n\n  @return $parent;\n}\n\n@function get-last-selector($selector) {\n  @while string.index('#{$selector}', ' ') {\n    $selector: string.slice('#{$selector}', string.index('#{$selector}', ' ') + 1);\n  }\n\n  @return $selector;\n}\n\n@function get-block($selector) {\n  $have-element: string.index('#{&}', $elementDelimeter);\n  $have-modifier: string.index('#{&}', $modifierDelimeter);\n\n  @if $have-element {\n    @return string.slice('#{$selector}', 0, string.index('#{&}', $elementDelimeter) - 1);\n  }\n\n  @if $have-modifier {\n    @return string.slice('#{$selector}', 0, string.index('#{&}', $modifierDelimeter) - 1);\n  }\n\n  @return $selector;\n}\n\n@function get-element($selector) {\n  $have-modifier: string.index('#{$selector}', $modifierDelimeter);\n\n  @if $have-modifier {\n    $selector: string.slice('#{$selector}', 0, string.index('#{$selector}', $modifierDelimeter) - 1);\n\n    @while string.index(string.slice('#{$selector}', 2), '.') {\n      $selector: string.slice('#{$selector}', string.index(string.slice('#{$selector}', 2), '.') + 1);\n    }\n  }\n\n  @return $selector;\n}\n\n// prefix added by HDS\n// use for creating classes like .hds-<$block>\n// set $noPrefix to false to create classes like .-<$block>\n@mixin block($block, $noPrefix: false, $react: false) {\n  $className: $block;\n\n  @if not($noPrefix) {\n    $className: #{$blockPrefix + $block};\n  }\n\n  @if $react {\n    @content;\n  } @else {\n    @at-root {\n      .#{$className} {\n        @content;\n      }\n    }\n  }\n}\n\n// use inside block() or another element() to create scoped classes like .hds-<block>.hds-<block>__<$element>\n@mixin element($element) {\n  $is-modifier: string.index('#{&}', $modifierDelimeter);\n  // stylelint-disable-next-line scss/function-no-unknown\n  $block: get-block(&);\n\n  @if not $is-modifier {\n    @at-root {\n      #{$block}__#{$element} {\n        @content;\n      }\n    }\n  }\n\n  @if $is-modifier {\n    $is-element: string.index('#{&}', $elementDelimeter);\n\n    @if $is-element {\n      $block: string.slice('#{&}', 0, string.index('#{&}', $elementDelimeter) - 1);\n\n      @at-root {\n        & #{$block}__#{$element} {\n          @content;\n        }\n      }\n    }\n\n    @if not $is-element {\n      $block: string.slice('#{&}', 0, string.index('#{&}', $modifierDelimeter) - 1);\n      $block: string.slice($block, 1, string.index(string.slice($block, 2, -1), '.'));\n\n      @at-root {\n        & #{$block}__#{$element} {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// use inside block() or element() to create scoped classes like .hds-<block>.hds-<block>--<$modifier>\n@mixin modifier($modifier) {\n  $parent-selector: get-parent-selector('#{&}');\n  $last-selector: get-last-selector('#{&}');\n  // stylelint-disable-next-line scss/function-no-unknown\n  $element: get-element($last-selector);\n\n  @at-root {\n    @if $parent-selector {\n      #{$parent-selector} #{$last-selector}#{$element}#{$modifierDelimeter}#{$modifier} {\n        @content;\n      }\n    } @else {\n      #{$last-selector}#{$element}#{$modifierDelimeter}#{$modifier} {\n        @content;\n      }\n    }\n  }\n}\n\n// end of sass-easy-bem\n\n// HDS add-on to create .hds-<block>--modifier instead of .hds-<block>.hds-<block>--modifier\n@mixin unscopedModifier($block, $modifier, $react: false) {\n  @if $react {\n    @content;\n  } @else {\n    @at-root {\n      .#{$blockPrefix + $block}#{$modifierDelimeter}#{$modifier} {\n        @content;\n      }\n    }\n  }\n}\n\n// HDS add-on to create .hds-<block>__element instead of .hds-<block>.hds-<block>__element\n@mixin unscopedElement($block, $element, $react: false) {\n  @if $react {\n    @content;\n  } @else {\n    @at-root {\n      .#{$blockPrefix + $block}#{$elementDelimeter}#{$element} {\n        @content;\n      }\n    }\n  }\n}\n\n// HDS add-on to create .hds-<block>--modifier.hds-<block>--theme {\n@mixin unscopedModifierWithTheme($block, $modifier, $theme, $react: false) {\n  @if $react {\n    @content;\n  } @else {\n    @at-root {\n      .#{$blockPrefix + $block}#{$modifierDelimeter}#{$modifier}.#{$blockPrefix + $block}#{$modifierDelimeter}#{$theme} {\n        @content;\n      }\n    }\n  }\n}","@use './table-mixin' as *;\n@include table;\n","@use '../../utils/bem' as BemUtil;\n\n@mixin base {\n  --content-background-color: var(--color-white);\n\n  border-collapse: collapse;\n  line-height: 1.5;\n  width: 100%;\n\n  &-container {\n    overflow-x: auto;\n  }\n\n  &-container:focus {\n    outline: var(--color-focus-outline) 3px solid;\n  }\n\n  & th {\n    border-bottom: 1px solid var(--color-black-20);\n    font-size: var(--fontsize-body-m);\n    font-weight: 500;\n    line-height: var(--lineheight-l);\n    padding: var(--spacing-xs) var(--spacing-m);\n    text-align: left;\n    white-space: nowrap;\n  }\n\n  &__content tr td {\n    background-color: var(--content-background-color);\n    border-bottom: 1px solid var(--color-black-50);\n    color: var(--color-black-90);\n    font-size: var(--fontsize-body-m);\n    font-weight: 400;\n    line-height: 24px;\n    padding: var(--spacing-xs) var(--spacing-m);\n  }\n\n  &__header-row {\n    background-color: var(--header-background-color);\n  }\n}\n\n@mixin mobile {\n  @media (max-width: 767px) {\n    & th {\n      font-size: var(--fontsize-body-s);\n      font-weight: bold;\n      padding: 9px var(--spacing-s);\n    }\n\n    &__content tr td {\n      font-size: var(--fontsize-body-s);\n      padding: 9px var(--spacing-s);\n    }\n\n    &__caption {\n      font-size: var(--fontsize-heading-xxs);\n      letter-spacing: 0.2px;\n      line-height: var(--lineheight-l);\n      margin-bottom: var(--spacing-xs);\n    }\n  }\n}\n\n@mixin textAlignTdRight {\n  &--text-align-td-right td {\n    text-align: right;\n  }\n}\n\n@mixin caption {\n  font-size: var(--fontsize-body-l);\n  font-weight: normal;\n  line-height: var(--lineheight-l);\n  margin-bottom: var(--spacing-s);\n  text-align: left;\n}\n\n\n@mixin dark {\n  &--dark {\n    --header-background-color: var(--color-bus);\n  }\n\n  &#{&}--dark th {\n    color: var(--color-white);\n  }\n}\n\n@mixin light {\n  &--light {\n    --header-background-color: var(--color-silver);\n  }\n\n  &#{&}--light th {\n    color: var(--color-black-90);\n  }\n}\n\n@mixin dense {\n  &--dense#{&} th {\n    font-size: var(--fontsize-body-s);\n    font-weight: bold;\n    padding: 9px var(--spacing-s);\n  }\n  &--dense #{&}__content tr td {\n    font-size: var(--fontsize-body-s);\n    padding: 9px var(--spacing-s);\n  }\n  &--dense #{&}__caption {\n    font-size: var(--fontsize-body-m);\n    line-height: var(--lineheight-l);\n    margin-bottom: var(--spacing-xs);\n  }\n}\n\n@mixin zebra {\n  &--zebra #{&}__content {\n    & tr td {\n      border-bottom: none;\n    }\n\n    & tr:nth-child(even) td {\n      background-color: var(--color-black-10);\n    }\n  }\n}\n\n@mixin withVerticalLines {\n  &--with-vertical-lines #{&}__content {\n    border-left: 1px solid var(--color-black-50);\n\n    & td {\n      border-right: 1px solid var(--color-black-50);\n    }\n  }\n\n  &--with-vertical-lines #{&}__header-row {\n    border-left: 1px solid var(--header-background-color);\n    border-right: 1px solid var(--header-background-color);\n  }\n}\n\n@mixin withVerticalHeader {\n  &__vertical-header-column {\n    background-color: var(--header-background-color);\n  }\n\n  &--with-vertical-header#{&}--with-vertical-lines #{&}__content {\n    border-left: none;\n  }\n\n  &--with-vertical-lines#{&}--with-vertical-header #{&}__header-row {\n    border-left: none;\n  }\n}\n\n@mixin textAlignRight {\n  text-align: right;\n}\n\n@mixin table(\n  $all: true,\n  $base: false,\n  $textAlignTdRight: false,\n  $caption: false,\n  $dark: false,\n  $light: false,\n  $withVerticalLines: false,\n  $dense: false,\n  $zebra: false,\n  $withVerticalHeader: false,\n  $textAlignRight: false,\n  $override: null,\n  $react: false\n) {\n  $className: 'table';\n\n  @if $override {\n    $className: $override;\n  }\n\n  @if $all or $base {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include base;\n    }\n  }\n\n  @if $all or $textAlignTdRight {\n    @include BemUtil.unscopedElement($className, 'content', $react) {\n      @include textAlignTdRight;\n    }\n  }\n\n  @if $all or $caption {\n    @include BemUtil.unscopedElement($className, 'caption', $react) {\n      @include caption;\n    }\n  }\n\n\n  @if $all or $dark {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include dark;\n    }\n  }\n\n  @if $all or $light {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include light;\n    }\n  }\n\n  @if $all or $withVerticalLines {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include withVerticalLines;\n    }\n  }\n\n  @if $all or $dense {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include dense;\n    }\n  }\n\n  @if $all or $zebra {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include zebra;\n    }\n  }\n\n  @if $all or $withVerticalHeader {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include withVerticalHeader;\n    }\n  }\n\n  @if $all or $textAlignRight {\n    @include BemUtil.unscopedModifier($className, 'text-align-right', $react) {\n      @include textAlignRight;\n    }\n  }\n\n  @if $all or $base {\n    @include BemUtil.block($className, if($override, true, false), $react) {\n      @include mobile;\n    }\n  }\n\n}\n"]}