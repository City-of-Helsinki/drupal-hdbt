// Content from HDS button.css starts
.hds-button {
  --border-width: 2px;
  --color: inherit;
  --min-size: 44px;
  --outline-gutter: 2px;
  --outline-width: 3px;

  align-content: flex-start;
  align-items: center;
  background-color: var(--background-color, transparent);
  border: var(--border-width) solid var(--border-color, transparent);
  border-radius: 0;
  color: var(--color);
  cursor: pointer;
  display: inline-flex;
  font-weight: 500;
  justify-content: center;
  min-height: var(--min-size);
  min-width: var(--min-size);
  padding: 0 var(--spacing-2-xs);
  position: relative;
  vertical-align: top;
}

.hds-button,
.hds-button::before,
.hds-button::after,
.hds-button *,
.hds-button *::before,
.hds-button *::after {
  box-sizing: border-box;
}

/* button transitions */

.hds-button:hover,
.hds-button:focus {
  transition-duration: 85ms;
  transition-property: background-color, border-color, color;
  transition-timing-function: ease-out;
}

.hds-button:hover {
  background-color: var(--background-color-hover, transparent);
  color: var(--color-hover);
}

.hds-button:focus {
  background-color: var(--background-color-focus, transparent);
  color: var(--color-focus);
  outline: none;
}

.hds-button:focus:hover {
  background-color: var(--background-color-hover-focus, transparent);
}

.hds-button:disabled {
  background-color: var(--background-color-disabled, transparent);
  border-color: var(--border-color-disabled, transparent);
  color: var(--color-disabled);
  cursor: not-allowed;
}

.hds-button:not(:disabled) {
  border-color: var(--border-color, transparent);
}

.hds-button:not(:disabled):hover {
  border-color: var(--border-color-hover, transparent);
}

.hds-button:not(:disabled):focus {
  border-color: var(--border-color-focus, transparent);
}

.hds-button:not(:disabled):focus:hover {
  border-color: var(--border-color-hover-focus, transparent);
  color: var(--color-hover-focus);
}

/* FOCUS OUTLINE */

.hds-button::after {
  --size: 100%;

  border: var(--outline-width) solid transparent;
  content: '';
  height: var(--size);
  position: absolute;
  width: var(--size);
}

.hds-button:focus::after {
  --size: calc(100% + calc(var(--outline-width) * 2 + var(--border-width) * 2 + var(--outline-gutter) * 2));
  border-color: var(--focus-outline-color);
}

/* submit input */

input[type="submit"].hds-button:focus {
  box-shadow: 0 0 0 var(--outline-gutter) var(--submit-input-focus-gutter-color), 0 0 0 calc(var(--outline-gutter) + var(--outline-width)) var(--focus-outline-color);
}

/* LABEL */

input[type="submit"].hds-button,
.hds-button__label {
  font-weight: inherit;
  line-height: 1.25em;
  padding: var(--spacing-s);
}

input[type="submit"].hds-button {
  cursor: pointer;
  padding: var(--spacing-s) var(--spacing-l);
}

/* no icons */

.hds-button__label:only-child {
  margin: 0 var(--spacing-2-xs);
}

/* supplementary with right icon */

.hds-button--supplementary .hds-button__label:first-child {
  padding-right: var(--spacing-3-xs);
}

/* supplementary with left icon */

.hds-button--supplementary .hds-icon + .hds-button__label:last-child {
  padding-left: var(--spacing-3-xs);
}

/* supplementary with both icons */

.hds-button--supplementary .hds-icon + .hds-button__label:not(:last-child) {
  padding-left: var(--spacing-3-xs);
  padding-right: var(--spacing-3-xs);
}

/* SMALL */

.hds-button--small {
  padding: 0;
}

input[type="submit"].hds-button--small,
.hds-button--small .hds-button__label {
  line-height: var(--lineheight-s);
  padding: var(--spacing-2-xs) var(--spacing-xs);
}

input[type="submit"].hds-button--small {
  padding: var(--spacing-2-xs) var(--spacing-m);
}

/* no icons */

.hds-button--small .hds-button__label:only-child {
  margin: 0 var(--spacing-xs);
}

/* both icons */

.hds-button--small .hds-button__label:not(:first-of-type):not(:last-of-type) {
  padding: var(--spacing-2-xs) var(--spacing-2-xs);
}

/* FULL WIDTH */

.hds-button--fullwidth {
  width: 100%;
}

/* ICONS */

/* left */

.hds-button .hds-icon {
  height: var(--spacing-m);
  margin-left: var(--spacing-s);
  width: var(--spacing-m);
}

/* right */

.hds-button__label ~ .hds-icon {
  margin: 0 var(--spacing-s) 0 0;
}

/* left - small */

.hds-button--small .hds-icon {
  margin-left: var(--spacing-2-xs);
}

/* right - small */

.hds-button .hds-button--small .hds-button__label ~ .hds-icon {
  margin: 0 var(--spacing-2-xs) 0 0;
}

/* both icons - left */

.hds-button .hds-icon:first-of-type:not(:last-of-type) {
  margin: 0 0 0 var(--spacing-2-xs);
}

/* both icons - right */

.hds-button .hds-icon:last-of-type:not(:first-of-type) {
  margin: 0 var(--spacing-2-xs) 0 0;
}

/* both icons - left - small */

.hds-button--small .hds-icon:first-child:not(:last-of-type) {
  margin: 0 0 0 var(--spacing-2-xs);
}

/* both icons - right - small */

.hds-button--small .hds-icon:last-child:not(:first-of-type) {
  margin: 0 var(--spacing-2-xs) 0 0;
}

/* PRIMARY */

/* default (bus) */

.hds-button--primary {
  --background-color: var(--color-bus);
  --background-color-hover: var(--color-bus-dark);
  --background-color-focus: var(--color-bus);
  --background-color-hover-focus: var(--color-bus-dark);
  --background-color-disabled: var(--color-black-20);

  --border-color: var(--color-bus);
  --border-color-hover: var(--color-bus-dark);
  --border-color-focus: var(--color-bus);
  --border-color-hover-focus: var(--color-bus-dark);
  --border-color-disabled: var(--color-black-20);

  --color: var(--color-white);
  --color-hover: var(--color-white);
  --color-focus: var(--color-white);
  --color-hover-focus: var(--color-white);
  --color-disabled: var(--color-white);

  --focus-outline-color: var(--color-coat-of-arms);
  --submit-input-focus-gutter-color: var(--color-white);
}

/* SECONDARY */

/* default (bus) */

.hds-button--secondary {
  --background-color: transparent;
  --background-color-hover: var(--color-bus-light);
  --background-color-focus: transparent;
  --background-color-hover-focus: var(--color-bus-light);
  --background-color-disabled: transparent;

  --border-color: var(--color-bus);
  --border-color-hover: var(--color-bus-dark);
  --border-color-focus: var(--color-bus);
  --border-color-hover-focus: var(--color-bus-dark);
  --border-color-disabled: var(--color-black-50);

  --color: var(--color-bus);
  --color-hover: var(--color-bus-dark);
  --color-focus: var(--color-bus);
  --color-hover-focus: var(--color-bus-dark);
  --color-disabled: var(--color-black-40);

  --focus-outline-color: var(--color-coat-of-arms);
  --submit-input-focus-gutter-color: var(--color-white);
}

/* SUPPLEMENTARY */

.hds-button--supplementary {
  --background-color: transparent;
  --background-color-hover: var(--color-bus-light);
  --background-color-focus: transparent;
  --background-color-hover-focus: var(--color-bus-light);
  --background-color-disabled: transparent;

  --border-color: transparent;
  --border-color-hover: transparent;
  --border-color-focus: var(--color-coat-of-arms);
  --border-color-hover-focus: var(--color-coat-of-arms);
  --border-color-disabled: transparent;

  --color: var(--color-bus);
  --color-hover: var(--color-bus-dark);
  --color-focus: var(--color-bus);
  --color-hover-focus: var(--color-bus-dark);
  --color-disabled: var(--color-black-40);

  --focus-outline-color: transparent;
  --submit-input-focus-gutter-color: transparent;
}

/* LOADING */

.hds-button--loading {
  --background-color: transparent;
  --background-color-hover: transparent;
  --background-color-focus: transparent;
  --background-color-hover-focus: transparent;
  --background-color-disabled: transparent;

  --border-color: transparent;
  --border-color-hover: transparent;
  --border-color-focus: transparent;
  --border-color-hover-focus: transparent;
  --border-color-disabled: transparent;

  --color: var(--color-black-90);
  --color-hover: var(--color-black-90);
  --color-focus: var(--color-black-90);
  --color-hover-focus: var(--color-black-90);
  --color-disabled: var(--color-black-90);

  cursor: wait;
}

/* UTILITY */

/* success */

.hds-button--success {
  --background-color: var(--color-success);
  --background-color-hover: var(--color-success-dark);
  --background-color-focus: var(--color-success);
  --background-color-hover-focus: var(--color-success-dark);

  --border-color: var(--color-success);
  --border-color-hover: var(--color-success-dark);
  --border-color-focus: var(--color-success);
  --border-color-hover-focus: var(--color-success-dark);

  --color: var(--color-white);
  --color-hover: var(--color-white);
  --color-focus: var(--color-white);
  --color-hover-focus: var(--color-white);

  --focus-outline-color: var(--color-coat-of-arms);
}

/* danger */

.hds-button--danger {
  --background-color: var(--color-error);
  --background-color-hover: var(--color-error-dark);
  --background-color-focus: var(--color-error);
  --background-color-hover-focus: var(--color-error-dark);

  --border-color: var(--color-error);
  --border-color-hover: var(--color-error-dark);
  --border-color-focus: var(--color-error);
  --border-color-hover-focus: var(--color-error-dark);

  --color: var(--color-white);
  --color-hover: var(--color-white);
  --color-focus: var(--color-white);
  --color-hover-focus: var(--color-white);

  --focus-outline-color: var(--color-coat-of-arms);
}

// Content fron HDS button.css ends
// TODO: Refactor hds-button.
// Fix for button margins when using hel-icon.
.hds-button {
  @include font('button');

  // Set icon size for the button icons.
  .hel-icon {
    --icon-size: 24px;
  }

  // Left icon margin,
  // copied from HDS (hds-core/lib/components/button/button.css)
  .hel-icon:first-of-type:not(:last-of-type) {
    margin: 0 0 0 $spacing-half;
  }

  // Right icon margin,
  // copied from HDS (hds-core/lib/components/button/button.css)
  .link__type,
  .hel-icon:last-of-type:not(:first-of-type) {
    margin: 0 $spacing-half 0 0;
  }
}

a.hds-button {
  text-decoration: none;

  // The supplementary button just won't work with the focus and default layout in the left aligned layout
  // so these changes are required to make it look even a bit more decent.
  &.hds-button--supplementary {
    margin: 0;
    padding: 0 $spacing-half 0 0;
    text-decoration: underline;

    .hds-button__label {
      line-height: $spacing-and-half; // To avoid too low link buttons
      margin: 0 0 -#{$spacing-half} 0;
      padding: $spacing-half;

      &:only-child {
        margin: 0;
      }
    }

    // Target before element when there is no selected icon, otherwise target after element
    &:not([data-selected-icon]):not([data-is-external])::before,
    &[data-selected-icon]:not([data-is-external])::after {
      --icon-size: #{$spacing-and-half};
      @include pseudo-icon('arrow-right', var(--icon-size), var(--color), inline-block);
      @include hover-link-arrow-transition();
      order: 3;
      position: static;
    }

    // Handle animation for above on focus and hover
    &:focus:not([data-selected-icon]):not([data-is-external])::before,
    &:hover:not([data-selected-icon]):not([data-is-external])::before,
    &[data-selected-icon]:focus:not([data-is-external])::after,
    &[data-selected-icon]:hover:not([data-is-external])::after {
      transform: translateX($spacing-quarter);
      @media (prefers-reduced-motion) {
        transform: none;
      }
    }

    &:hover {
      text-decoration: none;
    }
  }

  // The hdbt-icon needs additional 8px of margin on the right because the design on hds-buttons includes margin
  // on the right for the icon but hdbt-icons don't get the margin by default.
  &.hds-button--primary,
  &.hds-button--secondary {
    &.hdbt-icon::before {
      margin-right: $spacing;
    }
  }
}

.hds-button--supplementary:not(.hdbt-icon):not([data-selected-icon]) {
  &:before {
    // Add default icon (arrow icon) for the supplementary button.
    @include pseudo-icon-replace('arrow-right');
  }
}

// In case a button with supplementary style is the first child inside a p-tag we can assume it is next to
// spacing of the element that contains the link so we want to move the supplementary button little bit to the left.
// Example: A button is written inside of a WYSIWYG-element and it is inside its p-tag as first item.
p > a.hds-button.hds-button--supplementary:first-child {
  margin-left: calc(-#{$spacing-half} + (-2px));
}

.hds-button--link {
  --border-width: 2px;
  --min-size: 56px;
  --outline-gutter: 2px;
  --outline-width: 3px;
}

// Set colors for all hds-button--link elements that have color defined via primary, secondary or supplementary modifier
@include hds-button-colors-on-light-bg($class: '.hds-button--link');

// Hide target blank explanation text from others than screen-readers
.hds-button__target-blank {
  @include visually-hidden();
}

// Combat ckeditor leaking spans from inside buttons and hds setting these spans stupid paddings and margins
:not(.hds-button) > .hds-button__label {
  margin: 0;
  padding: 0;
}
