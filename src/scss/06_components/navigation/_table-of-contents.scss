.table-of-contents {
  @include components-container-max-width;

  &:not(:first-child) {
    @include component-margin-top;
  }

  @include breakpoint($breakpoint-m) {
    @include component-side-padding;
    margin-left: auto;
    margin-right: auto;
  }
}

// Add extra margin to the following element if table of contents is enabled.
.table-of-contents + * {
  @include component-margin-top;
}

.table-of-contents__container {
  background-color: $color-silver-light;
  border-inline-start: $spacing-half solid $color-gold;
  max-width: $spacing-and-half + $content-width-max + $spacing-and-half; // Max-width: Content max width (860px) + left and right paddings.
  padding: $spacing-double $spacing-and-half;
}

.table-of-contents__title {
  @include font('h3');
  margin-bottom: 0;
  margin-top: 0;

  & + .table-of-contents__content {
    padding-top: $spacing;

    @include breakpoint($breakpoint-l) {
      padding-top: $spacing-and-half;
    }
  }
}

.table-of-contents__list {
  list-style-type: none;
  margin: 0;
  padding: 0;

  // Add top padding to each table of contents item, except the first one.
  > .table-of-contents__item ~ .table-of-contents__item {
    padding-top: $spacing;
  }
}

.table-of-contents__link {
  @include font('special.large_link');
  display: inline-block;
  position: relative;
  text-decoration: underline;

  // TODO: UHF-643 Unify focuses/hovers and other link styles (https://helsinkisolutionoffice.atlassian.net/browse/UHF-643).
  &:focus {
    outline: none;

    &::after {
      box-shadow: 0 0 0 3px $color-black;
      content: '';
      display: block;
      height: 100%;
      left: -#{$spacing-quarter};
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: calc(100% + #{$spacing-half});
    }
  }
}

.table-of-contents__js {
  display: none;

  &[data-js="true"] {
    display: block;
  }
}

.table-of-contents__nojs {
  background-color: $color-silver-light;
  display: flex;
  flex-flow: column;
  padding: $spacing-double $spacing-and-half;

  @include breakpoint($breakpoint-m) {
    flex-flow: row;
  }

  .nojs__icon {
    display: inline-flex;
    margin-bottom: $spacing-and-half;
    margin-inline-end: $spacing;

    @include breakpoint($breakpoint-m) {
      margin-inline-end: $spacing-and-half;
    }

    .hel-icon {
      --icon-size: #{$spacing-quadruple};

      @include breakpoint($breakpoint-m) {
        --icon-size: #{remify(100px)};
      }
    }
  }

  .nojs__title {
    @include font('h3');
    margin-top: 0;
  }

  .nojs__desc {
    @include font('body');
    margin-top: $spacing;

    @include breakpoint($breakpoint-l) {
      margin-top: $spacing-and-half;
    }

    p:first-child {
      margin: 0;
    }
  }
}

[data-once='table-of-contents']:focus,
[data-once='table-of-contents']:active {
  outline: 3px solid $color-black;
  outline-offset: 2px;
}

// This implementation is very close to phasing component but not totally the same.
.table-of-contents--news-update {
  @include component-side-padding;
  --item-title-lineheight: #{1.5 * get-font-size('h4')};

  .table-of-contents__container {
    // Hide the border that the default TOC has on the left.
    border-inline-start: none;
  }

  .table-of-contents__title + .table-of-contents__content {
    padding-top: $spacing;
  }

  .table-of-contents__item {
    @include font('special.large_link');
    display: flex;
    flex-direction: column;
    padding-block: $spacing;
    padding-inline: $spacing;
    position: relative;

    @include breakpoint($breakpoint-m) {
      flex-direction: row;
    }

    &::before,
    &::after {
      content: '';
      display: block;
      inset-inline-start: calc($spacing * 0.5);
      position: absolute;

      &:dir(rtl) {
        right: calc($spacing * 0.5);
      }
    }

    &::after {
      background-color: $color-black;
      height: calc(100% + $spacing-double + $spacing-half);
      top: -#{$spacing};
      transform: translateX(calc(var(--lang-direction) * -50%));
      width: 2px;
      z-index: 0;
    }

    &:first-of-type::after {
      height: 100%;
      top: calc($spacing + var(--item-title-lineheight) * 0.5);
    }

    &:last-of-type::after {
      height: calc($spacing + var(--item-title-lineheight) * 0.5);
    }

    &:only-child::after {
      display: none;
    }

    &::before {
      background-color: $color-white;
      border: 3px solid $color-black;
      border-radius: 50%;
      height: $spacing;
      top: calc($spacing + var(--item-title-lineheight) * 0.5);
      transform: translate(calc(var(--lang-direction) * -50%), -50%);
      width: $spacing;
      z-index: 1;
    }
  }

  time {
    padding-left: $spacing;

    &:dir(rtl) {
      padding-left: 0;
      padding-right: $spacing;
    }
  }

  .table-of-contents__link {
    margin-left: $spacing;

    @include breakpoint($breakpoint-m) {
      margin-left: $spacing-double;
    }

    &:dir(rtl) {
      margin-left: 0;
      margin-right: $spacing;

      @include breakpoint($breakpoint-m) {
        margin-right: $spacing-double;
      }
    }
  }
}
