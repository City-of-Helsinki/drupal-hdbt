// stylelint-disable no-descending-specificity
$-header-branding-height-desktop: 87px;
$-menu-transition-duration: 0.2s;
$-cssnav-summary-width: 40px;
$-cssmenu-bottom-padding: 80px; // Reserve space for mobile browser untappable-area

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Hidden checkbox that toggles visibility of menu, for css-only version it's visible to screen readers
.cssmenu-toggle-checkbox {
  height: 1px;
  margin-left: -100vw; // We want to hide this checkbox, but leave it available, so that it's toggleable with screen readers
  opacity: 0;
  position: absolute;
  user-select: none;
  width: 1px;
}

.cssmenu-toggle-checkbox[data-js], // Hide checkbox fully when js is enabled
.cssmenu-toggle-button, // Hide js version of button if js is not enabled
[data-js] ~ * .cssmenu-toggle {
  display: none; // Hide css-only toggle button when js is enabled
}

// Mobile menu toggle button, both css-only and js versions
.cssmenu-toggle,
[data-js] ~ * .cssmenu-toggle-button {
  @include font('special.navigation.icon_label');
  align-self: center;
  color: $color-black-90;
  cursor: pointer;
  display: grid;
  grid-area: toggle;
  grid-template-areas:
    'icon'
    'label';
  padding: 5px; // Handles spacing for 'inside' focus ring
  text-align: center;
  user-select: none;
  z-index: 2;

  @include breakpoint($breakpoint-l) {
    display: none;
  }

  &:focus,
  &:hover {
    text-decoration: underline;
  }

  &::before {
    @include pseudo-icon('menu-hamburger', 32px, currentColor, block);
    align-self: end;
    grid-area: icon;
    justify-self: center;
  }
}

// Remove default button styles
[data-js] ~ * .cssmenu-toggle-button {
  background: transparent;
  border: 0 none;
}

// Show focus ring for mobile menu toggle
.cssmenu-toggle-checkbox:focus ~ * .cssmenu-toggle,
.cssmenu-toggle-button:focus {
  outline: 3px solid $color-black;
  outline-offset: -3px;
  text-decoration: underline;
}

// Text for mobile menu toggle
.cssmenu-toggle__open,
.cssmenu-toggle__close {
  align-self: top;
  grid-area: label;
  text-align: center;
}

// Hide 'Close' text by default, but keep it in visual flow to reserve space
.cssmenu-toggle__close {
  visibility: hidden;
}

// Menu that opens when the toggle checkbox is checked
.cssmenu-menu {
  --menu-transition-duration: #{$-menu-transition-duration};
  background: $color-white;
  box-shadow: 0 $spacing 0 0 $color-black; // Hide rounding errors from bottom.
  display: grid;
  grid-area: menu;
  grid-template-areas:
    'lang'
    'nav'
    'footer';
  grid-template-rows: auto auto 1fr;
  height: 100vh;
  max-height: calc(100vh - var(--drupal-toolbar-height, 0px) - var(--block-branding-height-mobile, 65px) - 1px); // Full page height - header-branding height - 1px for rounding errors
  max-width: 100vw;
  overflow: auto;
  transition: max-height var(--menu-transition-duration) linear, visibility 0s linear 0s, margin-left 0s linear 0s, box-shadow 0s linear var(--menu-transition-duration);
  visibility: visible;

  @include breakpoint($breakpoint-m) {
    max-height: calc(100vh - var(--drupal-toolbar-height, 0px) - $-header-branding-height-desktop - 1px);
  }

  @include breakpoint($breakpoint-l) {
    display: none;
  }

  @media (prefers-reduced-motion) {
    transition: none !important;
  }
}

// Hide .cssmenu-menu so that it's not focusable, or seen by screen readers, but can stil animate open
.cssmenu-toggle-checkbox:not(:checked) ~ * .cssmenu-menu {
  box-shadow: 0 0 0 0 $color-black;
  margin-left: -200vw;
  max-height: 0;
  transition: max-height var(--menu-transition-duration) linear, visibility 0s linear var(--menu-transition-duration), margin-left 0s linear var(--menu-transition-duration);
  visibility: hidden;
}

.cssmenu-menu .block--language-switcher {
  display: none; // Hidden by default to make closing menu not show double language selectors.
  grid-area: lang;
  margin-left: 0;
  margin-right: 0;
  width: auto;

  @include breakpoint($breakpoint-m) {
    display: none; // Hidden when the language menu has space in header bar
  }
}

// What should happen when menu is opened
.cssmenu-toggle-checkbox:checked {
  & ~ * .header-branding {
    @include breakpoint(max-width $breakpoint-l) {
      border-bottom: 0 none; // Hide header branding bottom border when menu is open and visible
    }
  }

  & ~ * .header-branding > .block--language-switcher {
    display: none; // Should be hidden on small sizes when menu is open // First language switcher

    @include breakpoint($breakpoint-m) {
      display: block; // Should be visible when second language switcher is not visible inside menu
    }
  }

  & ~ * .cssmenu-menu .block--language-switcher {
    @include breakpoint(max-width $breakpoint-m) {
      display: block; // Show second language-switcher when menu is open and first is not visible (second is hidden normally to help with animation)
    }
  }

  & ~ * .cssmenu-toggle::before {
    @include pseudo-icon-replace('cross'); // Switch menu toggle icon to cross when menu is open
  }

  & ~ * .cssmenu-toggle__open {
    visibility: hidden; // Hide 'Menu'-text when menu is open
  }

  & ~ * .cssmenu-toggle__close {
    visibility: visible; // Show 'Close' text when menu is open
  }

  & ~ .wrapper > *:not(.header), // All wrapper content except .header
  & ~ .footer {
    @include breakpoint(max-width $breakpoint-l) {
      display: none; // Hide when menu is open and visible
    } // Footer
  }
}

// Hide widgets like chats based on selectors in cssmenu.js
[data-cssmenu-hide] {
  display: none !important;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Navigation ul inside cssmenu
.cssnav {
  border-bottom: 1px solid $color-black-20;
  grid-area: nav;
  position: relative;
}

// Child ul elements
.cssnav__subnav {
  border-bottom: 0 none;
}

// Remove default list styles
.cssnav,
.cssnav__subnav,
.cssnav__item {
  list-style: none;
  margin: 0;
  padding: 0;
}

// The li element
.cssnav__item {
  background-color: var(--cssnav-bg, $color-white);
}

.cssnav__item--level-2,
.cssnav__item--level-3:first-child {
  border-top: 1px solid $color-black-20;
}

// Instances like SOTE is level 1, in this menu numbering continues from main navigation level 2 onwards
.cssnav__item--level-2 {
  --cssnav-bg: #{$color-white};
  --cssnav-fg: #{$color-black-90};
  --cssnav-line: #{$color-black-20};
  --cssnav-indent: #{$spacing};
}

.cssnav__item--level-3 {
  --cssnav-bg: #{$color-black-5};
  --cssnav-indent: #{$spacing-and-half}; // previous + 8
}

.cssnav__item--level-4 {
  --cssnav-bg: #{$color-black-10};
  --cssnav-line: #{$color-black-30};
  --cssnav-indent: #{$spacing-double}; // previous + 8
}

.cssnav__item--level-5 {
  --cssnav-bg: #{$color-black-20};
  --cssnav-line: #{$color-black-40};
  --cssnav-indent: 36px; // previous + 8
}

.cssnav__item--level-6 {
  --cssnav-bg: #{$color-black-30};
  --cssnav-line: #{$color-black-50};
  --cssnav-indent: 40px; // previous + 4
}

.cssnav__item--level-7 {
  --cssnav-bg: #{$color-black-40};
  --cssnav-fg: #{$color-black};
  --cssnav-line: #{$color-black-60};
  --cssnav-indent: 44px; // previous + 4
}

.cssnav__item--level-8 {
  --cssnav-bg: #{$color-black-50};
  --cssnav-line: #{$color-black-70};
  --cssnav-indent: #{$spacing-triple}; // previous + 4
}

.cssnav__item--level-9 {
  --cssnav-bg: #{$color-black-60};
  --cssnav-fg: #{$color-white};
  --cssnav-line: #{$color-white};
  --cssnav-indent: 52px; // previous + 4
}

// Last level supported by Drupal
.cssnav__item--level-10 {
  --cssnav-bg: #{$color-black-70};
  --cssnav-indent: 56px; // previous + 4
}

.cssnav__link {
  box-shadow: inset 0 0 0 0 var(--cssnav-fg);
  color: var(--cssnav-fg);
  text-decoration: none;
  transition: box-shadow ease-in 0.1s;

  &:active,
  &:focus {
    outline: 3px solid var(--cssnav-fg);
    outline-offset: -3px;
  }

  &:hover {
    box-shadow: inset 3px 0 0 0 var(--cssnav-fg);
  }

  &:focus,
  &:hover {
    text-decoration: underline;
  }
}

// Pull the following details element below this link
.cssnav__item--has-children > .cssnav__link {
  left: 0;
  margin-right: $-cssnav-summary-width;
  position: absolute;
  right: 0;
  z-index: 1;
}

.cssnav__text-mirror {
  visibility: hidden; // visibility hidden reserves correct amount of space for the link floating above
}

// Both link and text-mirror styles should be identical
.cssnav__link,
.cssnav__text-mirror {
  @include font('special.navigation.mobile_nav');
  display: block;
  padding-bottom: $spacing;
  padding-left: var(--cssnav-indent);
  padding-right: $spacing;
  padding-top: $spacing;
}

.cssnav__item--level-3 .cssnav__link,
.cssnav__item--level-3 .cssnav__text-mirror {
  @include font('special.navigation.mobile_subnav');
  padding-bottom: $spacing-half;
  padding-right: $spacing-half;
  padding-top: $spacing-half;
}

.cssnav summary {
  display: grid;
  grid-template-areas: 'label toggle';
  grid-template-columns: 1fr $-cssnav-summary-width;
  justify-content: space-between;
  list-style: none; // removes details marker in some browsers

  &::-webkit-details-marker {
    display: none;
  }

  &:focus {
    outline: 0 none;
  }

  &:active .cssnav__toggle,
  &:focus .cssnav__toggle {
    outline: 3px solid var(--cssnav-fg);
    outline-offset: -3px;
  }
}

// Current page and in-path links
.cssnav__link--in-path,
.cssnav__link--in-path + details > summary > .cssnav__text-mirror {
  font-weight: 700;
}

.cssnav__toggle {
  align-items: center;
  box-shadow: -1px 0 0 0 var(--cssnav-line);
  cursor: pointer;
  display: flex;
  justify-content: center;
  position: relative;
}

.cssnav__toggle .visually-hidden {
  left: 0;
  top: 50%;
}

.cssnav__item--level-3 .cssnav__toggle {
  box-shadow: -10px 0 0 -9px var(--cssnav-line); // Create shorter border between different buttons
}

.cssnav__toggle::before {
  @include pseudo-icon('angle-down', $spacing-and-half, var(--cssnav-fg));
  @include rotating-icon-transition;
}

.cssnav details[open] > summary > .cssnav__toggle::before {
  transform: rotate(180deg);
}

.cssmenu-menu__footer {
  background: $color-black;
  color: $color-white;
  grid-area: footer;
  padding-bottom: $-cssmenu-bottom-padding;
  padding-top: $spacing;

  .menu {
    display: block;
  }

  .menu__item + .menu__item {
    margin-left: 0;
  }

  .menu__link {
    @include font('body');
    color: $color-white;
    display: block;
    padding: $spacing-half $spacing;

    &:focus,
    &:active {
      outline: 3px solid $color-white;
      outline-offset: -5px;
    }
  }

  & > .menu__link {
    font-weight: bold; // Make the city link bolded like in design specs
  }
}
