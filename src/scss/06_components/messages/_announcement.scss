$-announcement_link_padding: $spacing-three-quarters;

.announcement {
  @include font('small');
  height: var(--js-announcement-height, auto); // Allow overriding height for triggering css animation with js
  padding-bottom: $spacing;
}

.announcement__container {
  --announcement-bg-color: #{$color-black-5}; // Defaults to .announcement--notification styles
  --announcement-bg-size: #{$spacing-double};
  --announcement-color: #{$color-info}; // Defaults to .announcement--notification styles
  align-items: flex-start;
  background: linear-gradient(90deg, var(--announcement-color) 0, var(--announcement-color) var(--announcement-bg-size), var(--announcement-bg-color) var(--announcement-bg-size));
  background-color: var(--announcement-bg-color);
  display: flex;
  flex-direction: row-reverse;
  justify-content: space-between;
  min-height: var(--announcement-bg-size);
  padding-bottom: $spacing;
  padding-left: calc(var(--announcement-bg-size) + #{$spacing});
  padding-right: $spacing;
  padding-top: $spacing;
  position: relative;

  &::before {
    @include pseudo-icon('info-circle-fill', $spacing-and-half, $color-white); // Defaults to .announcement--notification styles
    left: calc(0.5 * (var(--announcement-bg-size) - #{$spacing-and-half}));
    margin-top: -$spacing-and-half * 0.5;
    position: absolute;
    top: 50%;
  }

  @include breakpoint($breakpoint-m) {
    --announcement-bg-size: #{$spacing-triple};
  }
}

.announcement--alert .announcement__container {
  --announcement-bg-color: #{$color-error-light};
  --announcement-color: #{$color-error};

  &::before {
    @include pseudo-icon-replace('error-fill');
  }
}

.announcement--attention .announcement__container {
  --announcement-color: #{$color-alert};

  &::before {
    @include pseudo-icon-replace('alert-circle-fill');
    background-color: $color-black;
  }
}

.announcement__content-body {
  & *:first-child {
    margin-top: 0;
  }
}

.announcement__link {
  margin-top: $spacing;

  &:first-child {
    margin-top: 0;
  }

  a {
    padding-block: $-announcement_link_padding; // This sets the link clickable area to be big enough for a11y.
  }

  a:focus,
  a:active {
    outline: solid var(--color-black) 3px;
  }

  a::after {
    @include pseudo-icon('arrow-right', calc(var(--line-height) * 1em));
    @include hover-link-arrow-transition;
    margin-left: $spacing-quarter;
  }

  a:focus::after,
  a:hover::after {
    transform: translateX($spacing-quarter);

    @media (prefers-reduced-motion) {
      transform: none;
    }
  }

  a[data-is-external]::after {
    content: none;
  }
}

.announcement__close {
  @include close-button;
}

.js-announcement__close--disabled {
  visibility: hidden; // Close button should be hidden until we have js enabled
}

.js-announcement--hide {
  $transition-a: 0.15s; // Fade out announcement
  $transition-b: 0.2s; // Then scale it out
  height: 0;
  opacity: 0;
  overflow: hidden;
  padding-bottom: 0;
  transition:
    opacity linear $transition-a,
    height linear $transition-b $transition-a,
    padding-bottom linear $transition-b $transition-a,
    visibility linear 0s #{$transition-a + $transition-b};
  visibility: hidden;

  @media (prefers-reduced-motion) {
    transition: none;
  }
}
