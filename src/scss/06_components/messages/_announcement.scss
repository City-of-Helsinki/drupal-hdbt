.announcement{
  height: var(--js-announcement-height, auto); // Allow overriding height for triggering css animation with js
  padding-bottom: $spacing;
}

.announcement__container {
  --announcement-bg-color: #{$color-silver-light}; // Defaults to .announcement--notification styles
  --announcement-bg-size: #{$spacing-double};
  --announcement-color: #{$color-info}; // Defaults to .announcement--notification styles
  align-items: flex-start;
  background: linear-gradient(90deg, var(--announcement-color) 0, var(--announcement-color) var(--announcement-bg-size), var(--announcement-bg-color) var(--announcement-bg-size));
  background-color: var(--announcement-bg-color);
  box-shadow: 2px 2px 10px 0 rgba(0, 0, 0, 0.1);
  display: flex;
  justify-content: space-between;
  margin-left: $component-side-padding-mobile;
  margin-right: $component-side-padding-mobile;
  min-height: var(--announcement-bg-size);
  padding-bottom: $spacing;
  padding-left: calc(var(--announcement-bg-size) + #{$spacing});
  padding-right: $spacing;
  padding-top: $spacing;
  position: relative;

  &::before {
    @include pseudo-icon('info-circle-fill', $spacing-and-half, $color-white); // Defaults to .announcement--notification styles
    left: calc(0.5 * (var(--announcement-bg-size) - #{$spacing-and-half}));
    margin-top: -$spacing-and-half * 0.5;
    position: absolute;
    top: 50%;
  }

  @include breakpoint($breakpoint-m) {
    --announcement-bg-size: #{$spacing-triple};
  }
  @if $component-side-padding-mobile != $component-side-padding-desktop {
    @include breakpoint($component-side-padding-breakpoint) {
      margin-left: $component-side-padding-desktop;
      margin-right: $component-side-padding-desktop;
    }
  }
}

.announcement--alert .announcement__container{
  --announcement-bg-color: #{$color-error-light};
  --announcement-color: #{$color-error};
  &::before {
    @include pseudo-icon-replace('error-fill');
  }
}

.announcement--attention .announcement__container {
  --announcement-color: #{$color-alert};
  &::before {
    @include pseudo-icon-replace('alert-circle-fill');
    background-color: $color-black;
  }
}

.announcenemnt__content-body {
  & *:first-child {
    margin-top: 0;
  }
}

.announcement__link {
  margin-top: $spacing;

  &:first-child {
    margin-top: 0;
  }

  a::after {
    @include pseudo-icon('arrow-right', $spacing-and-half);
    margin-left: $spacing-quarter;
  }
}

.announcement__close {
  background: transparent;
  border: 0 none;
  cursor: pointer;
  height: $spacing-double;
  margin-bottom: 0;
  margin-left: 0;
  margin-right: -$spacing-half;
  margin-top: -$spacing-half;
  padding: 0;
  width: $spacing-double;
  &::after{
    --icon-size: #{$spacing-double};
    @include pseudo-icon('cross');
  }
}

.js-announcement__close--disabled {
  visibility: hidden; // Close button should be hidden until we have js enabled
}

.js-announcement--hide {
  $transition-a: 0.15s; // Fade out announcement
  $transition-b: 0.2s; // Then scale it out
  height: 0;
  opacity: 0;
  overflow: hidden;
  padding-bottom: 0;
  transition:
    opacity linear $transition-a,
    height linear $transition-b $transition-a,
    padding-bottom linear $transition-b $transition-a,
    visibility linear 0s #{$transition-a + $transition-b};
  visibility: hidden;
  @media (prefers-reduced-motion) {
    transition: none;
  }
}
