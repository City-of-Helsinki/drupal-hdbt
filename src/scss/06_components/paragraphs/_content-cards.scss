$-card-spacing: $spacing-and-half;

.component-content-cards .component__container {
  overflow: hidden;
}

.content-cards {
  display: flex;
  flex-direction: column;
  margin-bottom: 0;
  margin-top: 0;

  @include breakpoint($breakpoint-s) {
    flex-direction: row;
    flex-wrap: wrap;
    margin-left: -$-card-spacing;
    width: calc(100% + #{$-card-spacing});
  }
}

.content-card {
  margin-top: $spacing-quadruple;
  position: relative;

  @include breakpoint($breakpoint-s) {
    margin-left: $-card-spacing;
    width: calc(50% - #{$-card-spacing});
  }

  @include breakpoint($breakpoint-l) {
    width: calc(25% - #{$-card-spacing});
  }

  &:first-child {
    margin-top: 0;
  }
}

.content-card__image {
  line-height: 0;

  img {
    @include image-defaults($width: 100%, $max-width: null);
    @include loading-image-background;
  }
}

.content-card__title {
  @include font('h4');
  margin-top: $spacing;
}

.content-card__date {
  margin-top: $spacing-half;
}

.content-card__link {
  display: block;
  overflow: hidden;
  text-decoration: none;

  &::before {
    content: '';
    inset: 0;
    position: absolute;
  }

  &::after {
    @include hover-link-arrow-transition;

    --icon-size: 2rem;
    margin-left: -2px; // Pull the arrow a bit to the left to align with text.
    margin-top: $spacing;

    @include pseudo-icon('arrow-right');

    @include breakpoint($breakpoint-s) {
      --icon-size: 3rem;
      margin-left: -4px; // Pull the arrow a bit to the left to align with text.
    }
  }

  &:focus,
  &:hover {
    .content-card__title {
      text-decoration: underline;
    }

    &::after {
      transform: translateX($spacing);

      @media (prefers-reduced-motion) {
        transform: none;
      }
    }
  }
}

.content-card--unpublished {
  outline: 2px solid var(--color-error);
  outline-offset: $spacing-quarter;

  .content-card__link {
    color: var(--color-error);

    &::after {
      background-color: var(--color-error);
    }
  }
}

.component--content-cards-large {
  .content-card {
    @include breakpoint($breakpoint-s) {
      margin-left: $-card-spacing;
      width: calc(50% - #{$-card-spacing});
    }

    @include breakpoint($breakpoint-l) {
      width: calc(33.3333% - #{$-card-spacing});
    }
  }
}

.component--content-cards-grey {
  background: $color-silver-light;

  .hds-koros {
    color: $color-white;

    .has-sidebar .components--upper & {
      display: none; // Koro should not be visible when the component is inside narrow column due to sidebar.
    }
  }

  .component__container {
    padding-bottom: $spacing-quadruple;
    padding-top: $spacing-triple;

    @include breakpoint($breakpoint-l) {
      padding-bottom: $spacing-sextuple;
      padding-top: $spacing-quadruple;
    }

    // Since the component is not "full width" next to a sidebar, we should uniform padding around
    .has-sidebar .components--upper & {
      padding-bottom: $spacing-double;
      padding-left: $spacing-double;
      padding-right: $spacing-double;
      padding-top: $spacing-double;
    }
  }

  .content-card__link {
    background-color: $color-white;
    padding: $spacing;
  }
}

.component--content-cards-small {
  .content-card {
    &:nth-child(-n+2) {
      @include breakpoint($breakpoint-s) {
        margin-top: 0;
      }
    }

    &:nth-child(-n+4) {
      @include breakpoint($breakpoint-l) {
        margin-top: 0;
      }
    }
  }
}

.component--content-cards-large {
  .content-card {
    &:nth-child(-n+2) {
      @include breakpoint($breakpoint-s) {
        margin-top: 0;
      }
    }

    &:nth-child(-n+3) {
      @include breakpoint($breakpoint-l) {
        margin-top: 0;
      }
    }
  }
}

// If the content-cards with grey design is just before footer.
.layout-main-wrapper > *:last-child .component--content-cards-grey:last-child {
  margin-bottom: -115px; // Enough to get the block under the footer.
  padding-bottom: 55px; // Leave enough room between the last card and footer.
}
