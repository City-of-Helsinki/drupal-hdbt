$breakpoint-design-image-on-left-right: 830px;

.component--liftup-with-image-img {
  --side-padding: 24px;
  color: var(--hdbt-color-palette-text--primary);

  @include breakpoint($breakpoint-l) {
    --side-padding: 32px;
  }

  @include breakpoint($breakpoint-xl) {
    --side-padding: 20%;
  }

  .liftup-with-image {
    align-items: center;
    display: grid;

    // col1 and col2 overlap
    grid-template-columns: [col1-start] var(--side-padding) [col2-start] 1fr [col1-end] var(--side-padding) [col2-end];

    // row1 and row2 overlap
    grid-template-rows: [row1-start] 1fr [row2-start] $spacing-and-half [row1-end]  min-content [row2-end];

    // Maintain direction even on RTL languages
    [dir='rtl'] & {
      grid-template-columns: [col2-start] var(--side-padding) [col1-start] 1fr [col2-end] var(--side-padding) [col1-end];
    }

    @include breakpoint($breakpoint-design-image-on-left-right) {
      // single row
      grid-template-rows: [row1-start row2-start] 1fr [row1-end row2-end];
    }
  }

  .image__caption {
    color: $color-black;
  }

  &.component--liftup-with-image-img-on-right .liftup-with-image .image__caption,
  &.component--liftup-with-image-img-on-left .liftup-with-image .image__caption {
    @include breakpoint($breakpoint-design-image-on-left-right) {
      background-color: $color-white; // Since this element is absolutely positioned, we need a background color to show Siteimprove that the contrast is ok.
      bottom: $spacing;
      position: absolute;
    }
  }

  &.component--liftup-with-image-img-on-right .liftup-with-image {
    --content-area: row2-start / col1-start / row2-end / col1-end;
    --image-area: row1-start / col2-start / row1-end / col2-end;

    [dir='rtl'] & {
      --content-margin-left: auto;
    }

    .image__caption {
      @include breakpoint($breakpoint-design-image-on-left-right) {
        right: 0;
      }
    }
  }

  &.component--liftup-with-image-img-on-left .liftup-with-image {
    --content-area: row2-start / col2-start / row2-end / col2-end;
    --image-area: row1-start / col1-start / row1-end / col1-end;
    --content-margin-right: auto;
  }

  .liftup-with-image__content {
    background-color: var(--hdbt-color-palette--primary);
    color: var(--hdbt-color-palette-text--primary);
    margin-left: var(--content-margin-right);
    margin-right: var(--content-margin-left);
    padding: $spacing-and-half;
    width: 100%;
    

    @include breakpoint($breakpoint-l) {
      padding: $spacing-double;
      width: fit-content;
    }

    @include breakpoint($breakpoint-design-image-on-left-right) {
      display: flex;
      flex-direction: column;
      justify-content: center;
      min-height: 350px; // According to layouts
      width: 460px; // According to layouts
    }

    @include breakpoint($breakpoint-xl) {
      min-height: 435px; // According to layouts
    }

    [data-hds-component='button']:not([class*='hds-button']),
    .hds-button {
      @include font('button');
    }
  }

  // Designs with primary background color.
  a.link {
    color: var(--hdbt-color-palette-text--primary);
  }

  @include button-palettes('primary');
}

// Designs with secondary background color.
.component--liftup-with-image-secondary {
  color: var(--hdbt-color-palette-text--secondary);

  .liftup-with-image__content {
    background-color: var(--hdbt-color-palette--secondary);
    color: var(--hdbt-color-palette-text--secondary);
  }

  // Set normal links to same as text color (but not button links)
  a:not(.hds-button, [data-hds-component='button']),
  a:not(.hds-button, [data-hds-component='button']).link {
    color: var(--hdbt-color-palette-text--secondary);
  }

  @include button-palettes('secondary');
}

.liftup-with-image__image {
  grid-area: var(--image-area);

  picture {
    width: 100%;
  }

  img {
    @include image-defaults($width: 100%, $max-width: null);
    @include loading-image-background;
  }
}

.liftup-with-image__container {
  grid-area: var(--content-area);
}

.liftup-with-image__title {
  @include font('h3');
  margin-top: 0;
}

.liftup-with-image__desc {
  @include font('body');
  margin-top: $spacing;

  > *:first-child {
    margin-top: 0;
  }

  a {
    --hdbt-default-link-color: var(--hdbt-color-palette-text--primary);
  }
}

// Designs with overlapping image and text
.component--liftup-with-image-img {
  .image {
    display: flex;
    flex-direction: column;
  }

  picture {
    order: 2;
    padding-top: $spacing;

    @include breakpoint($breakpoint-design-image-on-left-right) {
      order: 1;
      padding-top: 0;
    }
  }

  .image__caption {
    order: 1;
    padding-top: 0;
    text-align: right;

    @include breakpoint($breakpoint-design-image-on-left-right) {
      margin-top: $spacing;
      order: 2;
    }
  }

  &.has-image-caption .liftup-with-image {
    @include breakpoint($breakpoint-design-image-on-left-right) {
      // Same line-height as the one used in the caption.
      --line-height: 1.5;

      // Line-height of the caption + spacing above the caption + spacing under the caption.
      padding-bottom: calc((var(--line-height) * 1rem) + $spacing + $spacing);
      position: relative;
    }
  }
}


// Designs with image as background.
.no-sidebar .components--upper > .component--liftup-with-image-bg.component--liftup-with-image-bg {
  padding-inline: 0;
}

.component--liftup-with-image-bg {
  .component__container {
    max-width: none;
  }

  .liftup-with-image {
    @include breakpoint($breakpoint-l) {
      @include components-container-max-width-property;

      --image-area: row1-start / col1-start / row1-end / col1-end;
      display: grid;
      grid-template-columns: [col1-start] 1fr [col2-start] min(100%, var(--max-width)) [col2-end] 1fr [col1-end];
      grid-template-rows: [row1-start row2-start] 1fr [row1-end row2-end];
    }
  }

  .liftup-with-image__image {
    @include breakpoint($breakpoint-l) {
      min-height: 540px; // Minimum height determined with designers.
      position: relative;
    }

    // stylelint-disable-next-line max-nesting-depth
    picture {
      @include breakpoint($breakpoint-l) {
        inset: 0;
        position: absolute;
      }
    }

    // stylelint-disable-next-line max-nesting-depth
    img {
      @include breakpoint($breakpoint-l) {
        @include image-defaults($height: 100%, $width: 100%, $max-width: null);
        object-fit: cover;
      }
    }

    // stylelint-disable-next-line max-nesting-depth
    .image__caption {
      color: $color-black;
      margin-top: $spacing;
      padding-left: $spacing;
      padding-top: 0;

      @include breakpoint($breakpoint-m) {
        padding-left: $spacing-double;
      }

      @include breakpoint($breakpoint-l) {
        background-color: $color-white; // Since this element is absolutely positioned, we need a background color to show Siteimprove that the contrast is ok.
        // Make the value negative * line-height of the caption + spacing above the caption.
        bottom: calc(-1 * (var(--line-height) * 1rem + $spacing));
        left: $spacing;
        padding-left: 0;
        position: absolute;
      }
    }
  }

  .liftup-with-image__container {
    @include component-side-padding;

    @include breakpoint($breakpoint-l) {
      align-content: center;
      display: grid;
      grid-area: row2-start / col2-start / row2-end / col2-end;
    }
  }

  .liftup-with-image__content {
    justify-self: end;
    padding-block-start: $spacing;
    padding-inline: 0;
    z-index: 1;

    @include breakpoint($breakpoint-l) {
      background-color: $color-white;
      display: flex;
      flex-direction: column;
      justify-content: center;
      margin: $spacing-quadruple 0;
      min-height: 350px; // According to layouts
      padding: $spacing-double;
      width: 460px; // According to layouts
    }
  }

  a {
    --hdbt-default-link-color: var(--color-black);
  }

  @include button-palettes('on-light-bg');

  &.has-image-caption .liftup-with-image {
    @include breakpoint($breakpoint-l) {
      // Same line-height as the one used in the caption.
      --line-height: 1.5;

      // Line-height of the caption + spacing above the caption + spacing under the caption.
      padding-bottom: calc((var(--line-height) * 1rem) + $spacing + $spacing);
      position: relative;
    }
  }
}

.component--liftup-with-image-bg.component--liftup-with-image-img-on-left  .liftup-with-image__container {
  @include breakpoint($breakpoint-l) {
    justify-self: end;

    [dir='rtl'] & {
      justify-self: start;
    }
  }
}


.component--liftup-with-image-bg.component--liftup-with-image-img-on-right .liftup-with-image__container {
  @include breakpoint($breakpoint-l) {
    justify-self: start;

    [dir='rtl'] & {
      justify-self: end;
    }
  }
}
