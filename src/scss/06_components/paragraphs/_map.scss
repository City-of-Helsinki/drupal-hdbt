@use "sass:math";

$-map-aspect-ratio-desktop: math.div(16, 9);
$-map-aspect-ratio-mobile: 1;

.component--map {
  background-color: $color-silver-light;

  .address-line1::after {
    content: ',';
  }
}

.unit .component--map {
  margin-top: $spacing-double;

  @include breakpoint($breakpoint-m) {
    margin-top: $spacing-triple;
  }
}

.component--map .component__container {
  padding: $spacing-triple 0;
}

.unit .component--map .component__container,
.has-sidebar .component--map .component__container {
  padding: $spacing-and-half $spacing $spacing-triple;

  @include breakpoint($breakpoint-m) {
    padding: $spacing-double $spacing-double $spacing-triple;
  }
}

.has-sidebar .components--upper .component--map,
.has-sidebar .unit .component--map {
  @include breakpoint(max-width $breakpoint-l) {
    @include component-negative-side-margin;
  }
}

.map {
  margin: $spacing 0;
  position: relative;

  .responsive-map-container {
    height: 0;
    padding-bottom: aspect-ratio-padding($-map-aspect-ratio-mobile);
    position: relative;

    @include breakpoint($breakpoint-s) {
      padding-bottom: aspect-ratio-padding($-map-aspect-ratio-desktop);
    }
  }

  iframe {
    background-color: $color-black-10; // Add color to show a "placeholder" while the map is loading
    border: 0;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }

  .map__external-link {
    @include font('button');
    align-items: center;
    bottom: -40px;
    display: inline-flex;
    position: absolute;
    right: 0;
    text-decoration: underline;
  }
}

.skip-map {
  --border-width: 2px;
  --border-color: var(--color-white);
  --outline-width: 3px;
  --background-color: var(--hdbt-color-black);
  --color: var(--color-white);
  --focus-outline-color: var(--hdbt-color-black);
  word-wrap: normal;
  background-color: var(--background-color);
  border: var(--border-width) solid var(--border-color);
  color: var(--color);
  font-weight: $font-weight-medium;
  left: 50%;
  position: absolute;
  text-decoration: none;
  transform: translate(-50%, 0);
  transition: transform ease-out 0.2s;
  width: fit-content; // This avoids pushing the content to two rows until absolutely necessary
  z-index: 2;

  &:not(:focus) {
    @include visually-hidden;
  }

  @include breakpoint($breakpoint-m) {
    scroll-margin-top: 24px; // Amount of air that should be left when scrolled to top.
  }

  &:focus,
  &:active {
    outline: var(--outline-width) solid var(--focus-outline-color);
    outline-offset: 0; // Chrome has a bug that shows a small offset when focused with keyboard instead of developer tools. This combats that problem.
    padding: $spacing-half $spacing-and-half;
  }

  &:hover {
    text-decoration: underline;
  }
}

.skip-map--after {
  bottom: 0;

  &:focus,
  &:active {
    transform: translate(-50%, -24px);
  }
}

.skip-map--before {
  top: 0;

  &:focus,
  &:active {
    transform: translate(-50%, 24px);
  }
}
