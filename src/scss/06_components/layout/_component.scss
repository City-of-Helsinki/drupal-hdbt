// Margins between components
* ~ .components,
.component ~ .component {
  @include component-margin-top;
}

// When components are full width and do not contain liftup-with-img-bg,
// they should have padding that keeps them from touching side.
.components--lower > .component:not(.component--liftup-with-image-bg),
.page-type--landing-page.no-sidebar .components--upper > .component:not(.component--liftup-with-image-bg) {
  @include component-side-padding;
}

// Koro should touch the sides
.component--has-koro > .hds-koros {
  margin-left: -$component-side-padding-mobile;
  margin-right: -$component-side-padding-mobile;
  width: calc(#{$component-side-padding-mobile} + 100% + #{$component-side-padding-mobile});

  @if $component-side-padding-mobile != $component-side-padding-desktop {
    @include breakpoint($component-side-padding-breakpoint) {
      margin-left: -$component-side-padding-desktop;
      margin-right: -$component-side-padding-desktop;
      width: calc(#{$component-side-padding-desktop} + 100% + #{$component-side-padding-desktop});
    }
  }
}

.component__container {
  margin-left: auto;
  margin-right: auto;
  max-width: $content-area-wrapper-width-max;
}

// By default title and description should have no margins
.component__title,
.component__description {
  margin-bottom: 0;
  margin-top: 0;
}

.component__description {
  @include font('body');
  max-width: $content-width-max;

  & > :first-child {
    margin-top: 0;
  }

  & > :last-child {
    margin-bottom: 0;
  }
}

// If component description exists with title, it should have margin top like this
.component__title + .component__description {
  margin-top: $component-title-spacing-mobile;

  @if $component-title-spacing-mobile != $component-title-spacing-desktop {
    @include breakpoint($component-spacing-breakpoint) {
      margin-top: $component-title-spacing-desktop;
    }
  }
}

// Lonely title should have same distance to content as component description
.component__title + .component__content,
.component__description + .component__content,
.component__tags + .component__content {
  margin-top: $component-desc-spacing-mobile;

  @if $component-desc-spacing-mobile != $component-desc-spacing-desktop {
    @include breakpoint($component-spacing-breakpoint) {
      margin-top: $component-desc-spacing-desktop;
    }
  }
}

.component--tpr-unit,
.component--unit-services,
.component--service-units {
  @include component-side-padding;
}

.component__tags {
  margin-top: $spacing-and-half;
}

// Components on other pages than landing-page
// need to be limited to content max-width to maintain readability.
:not(.page-type--landing-page).no-sidebar .components--upper,
:not(.page-type--landing-page).no-sidebar .components:not(.components--lower) {
  margin-left: auto;
  margin-right: auto;
  max-width: $content-area-wrapper-width-max;

  .component {
    max-width: $content-width-max;
  }
}

// Unit needs also these following fixed elements max-width. This should/could be fixed
// by changing the elements dom to use component classes.
.no-sidebar .unit--full .main-image picture {
  max-width: $content-width-max
}

// Service needs also these following fixed elements max-width.  This should/could be fixed
// by changing the elements dom to use component classes.
.no-sidebar .service--full .service__errand-services {
  margin-left: auto;
  margin-right: auto;
  max-width: $content-area-wrapper-width-max;

  .errand-service {
    max-width: $content-width-max;
  }
}
