/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/accordion-settings.js":
/*!**************************************!*\
  !*** ./src/js/accordion-settings.js ***!
  \**************************************/
/***/ (function() {

eval("document.addEventListener('DOMContentLoaded', function () {\n  // Bind closing function to the additional close button at the bottom of\n  // the content. For reasons unknown to man the close button cannot be\n  // actual button. If you change it from span to button the click event\n  // is no longer registered and the functionality doesn't work.\n  function closeFold(folds) {\n    let closeButton = folds.content.querySelector('.accordion-item__button--close');\n\n    function moveFocus(element) {\n      element.closest('.accordion__wrapper').querySelector('.accordion-item__button--toggle').focus();\n    }\n\n    closeButton.addEventListener('mousedown', function (e) {\n      folds.close();\n      e.preventDefault();\n      moveFocus(this);\n    });\n    closeButton.addEventListener('keypress', function (e) {\n      if (e.which === 13 || e.which === 32) {\n        folds.close();\n        e.preventDefault();\n        moveFocus(this);\n      }\n    });\n  } // Find all accordions.\n\n\n  const accordions = document.getElementsByClassName('handorgel');\n  window.handorgel_accordions = [];\n\n  for (let singleAccordion of accordions) {\n    /* global handorgel */\n    const accordion = new handorgel(singleAccordion, {\n      // whether multiple folds can be opened at once\n      multiSelectable: false,\n      // whether the folds are collapsible\n      collapsible: true,\n      // whether ARIA attributes are enabled\n      ariaEnabled: true,\n      // whether W3C keyboard shortcuts are enabled\n      keyboardInteraction: true,\n      // whether to loop header focus (sets focus back to first/last header when end/start reached)\n      carouselFocus: true,\n      // attribute for the header or content to open folds at initialization\n      initialOpenAttribute: 'data-open',\n      // whether to use transition at initial open\n      initialOpenTransition: true,\n      // delay used to show initial transition\n      initialOpenTransitionDelay: 200,\n      // header/content class if fold is open\n      headerOpenClass: 'handorgel__header--open',\n      contentOpenClass: 'handorgel__content--open',\n      // header/content class if fold has been opened (transition finished)\n      headerOpenedClass: 'handorgel__header--opened',\n      contentOpenedClass: 'handorgel__content--opened',\n      // header/content class if fold has been focused\n      headerFocusClass: 'handorgel__header--focus',\n      contentFocusClass: 'handorgel__content--focus',\n      // header/content class if fold is disabled\n      headerDisabledClass: 'handorgel__header--disabled',\n      contentDisabledClass: 'handorgel__content--disabled'\n    }); // Add a global variable so that we can open accordions with anchor links where needed\n\n    window.handorgel_accordions.push(accordion); // Get all the folds associated to the accordion.\n\n    let folds = accordion.folds; // Go through each fold.\n\n    folds.forEach(closeFold);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9oZGJ0Ly4vc3JjL2pzL2FjY29yZGlvbi1zZXR0aW5ncy5qcz8zNzQ1Il0sIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsb3NlRm9sZCIsImZvbGRzIiwiY2xvc2VCdXR0b24iLCJjb250ZW50IiwicXVlcnlTZWxlY3RvciIsIm1vdmVGb2N1cyIsImVsZW1lbnQiLCJjbG9zZXN0IiwiZm9jdXMiLCJlIiwiY2xvc2UiLCJwcmV2ZW50RGVmYXVsdCIsIndoaWNoIiwiYWNjb3JkaW9ucyIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJ3aW5kb3ciLCJoYW5kb3JnZWxfYWNjb3JkaW9ucyIsInNpbmdsZUFjY29yZGlvbiIsImFjY29yZGlvbiIsImhhbmRvcmdlbCIsIm11bHRpU2VsZWN0YWJsZSIsImNvbGxhcHNpYmxlIiwiYXJpYUVuYWJsZWQiLCJrZXlib2FyZEludGVyYWN0aW9uIiwiY2Fyb3VzZWxGb2N1cyIsImluaXRpYWxPcGVuQXR0cmlidXRlIiwiaW5pdGlhbE9wZW5UcmFuc2l0aW9uIiwiaW5pdGlhbE9wZW5UcmFuc2l0aW9uRGVsYXkiLCJoZWFkZXJPcGVuQ2xhc3MiLCJjb250ZW50T3BlbkNsYXNzIiwiaGVhZGVyT3BlbmVkQ2xhc3MiLCJjb250ZW50T3BlbmVkQ2xhc3MiLCJoZWFkZXJGb2N1c0NsYXNzIiwiY29udGVudEZvY3VzQ2xhc3MiLCJoZWFkZXJEaXNhYmxlZENsYXNzIiwiY29udGVudERpc2FibGVkQ2xhc3MiLCJwdXNoIiwiZm9yRWFjaCJdLCJtYXBwaW5ncyI6IkFBQUFBLFFBQVEsQ0FBQ0MsZ0JBQVQsQ0FBMEIsa0JBQTFCLEVBQThDLFlBQVk7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFTQyxTQUFULENBQW1CQyxLQUFuQixFQUEwQjtBQUN4QixRQUFJQyxXQUFXLEdBQUdELEtBQUssQ0FBQ0UsT0FBTixDQUFjQyxhQUFkLENBQ2hCLGdDQURnQixDQUFsQjs7QUFJQSxhQUFTQyxTQUFULENBQW1CQyxPQUFuQixFQUE0QjtBQUMxQkEsTUFBQUEsT0FBTyxDQUNKQyxPQURILENBQ1cscUJBRFgsRUFFR0gsYUFGSCxDQUVpQixpQ0FGakIsRUFHR0ksS0FISDtBQUlEOztBQUVETixJQUFBQSxXQUFXLENBQUNILGdCQUFaLENBQTZCLFdBQTdCLEVBQTBDLFVBQVVVLENBQVYsRUFBYTtBQUNyRFIsTUFBQUEsS0FBSyxDQUFDUyxLQUFOO0FBQ0FELE1BQUFBLENBQUMsQ0FBQ0UsY0FBRjtBQUNBTixNQUFBQSxTQUFTLENBQUMsSUFBRCxDQUFUO0FBQ0QsS0FKRDtBQU1BSCxJQUFBQSxXQUFXLENBQUNILGdCQUFaLENBQTZCLFVBQTdCLEVBQXlDLFVBQVVVLENBQVYsRUFBYTtBQUNwRCxVQUFJQSxDQUFDLENBQUNHLEtBQUYsS0FBWSxFQUFaLElBQWtCSCxDQUFDLENBQUNHLEtBQUYsS0FBWSxFQUFsQyxFQUFzQztBQUNwQ1gsUUFBQUEsS0FBSyxDQUFDUyxLQUFOO0FBQ0FELFFBQUFBLENBQUMsQ0FBQ0UsY0FBRjtBQUNBTixRQUFBQSxTQUFTLENBQUMsSUFBRCxDQUFUO0FBQ0Q7QUFDRixLQU5EO0FBT0QsR0E5QnVELENBZ0N4RDs7O0FBQ0EsUUFBTVEsVUFBVSxHQUFHZixRQUFRLENBQUNnQixzQkFBVCxDQUFnQyxXQUFoQyxDQUFuQjtBQUNBQyxFQUFBQSxNQUFNLENBQUNDLG9CQUFQLEdBQThCLEVBQTlCOztBQUVBLE9BQUssSUFBSUMsZUFBVCxJQUE0QkosVUFBNUIsRUFBd0M7QUFDdEM7QUFDQSxVQUFNSyxTQUFTLEdBQUcsSUFBSUMsU0FBSixDQUFjRixlQUFkLEVBQStCO0FBQy9DO0FBQ0FHLE1BQUFBLGVBQWUsRUFBRSxLQUY4QjtBQUcvQztBQUNBQyxNQUFBQSxXQUFXLEVBQUUsSUFKa0M7QUFNL0M7QUFDQUMsTUFBQUEsV0FBVyxFQUFFLElBUGtDO0FBUS9DO0FBQ0FDLE1BQUFBLG1CQUFtQixFQUFFLElBVDBCO0FBVS9DO0FBQ0FDLE1BQUFBLGFBQWEsRUFBRSxJQVhnQztBQWEvQztBQUNBQyxNQUFBQSxvQkFBb0IsRUFBRSxXQWR5QjtBQWUvQztBQUNBQyxNQUFBQSxxQkFBcUIsRUFBRSxJQWhCd0I7QUFpQi9DO0FBQ0FDLE1BQUFBLDBCQUEwQixFQUFFLEdBbEJtQjtBQW9CL0M7QUFDQUMsTUFBQUEsZUFBZSxFQUFFLHlCQXJCOEI7QUFzQi9DQyxNQUFBQSxnQkFBZ0IsRUFBRSwwQkF0QjZCO0FBd0IvQztBQUNBQyxNQUFBQSxpQkFBaUIsRUFBRSwyQkF6QjRCO0FBMEIvQ0MsTUFBQUEsa0JBQWtCLEVBQUUsNEJBMUIyQjtBQTRCL0M7QUFDQUMsTUFBQUEsZ0JBQWdCLEVBQUUsMEJBN0I2QjtBQThCL0NDLE1BQUFBLGlCQUFpQixFQUFFLDJCQTlCNEI7QUFnQy9DO0FBQ0FDLE1BQUFBLG1CQUFtQixFQUFFLDZCQWpDMEI7QUFrQy9DQyxNQUFBQSxvQkFBb0IsRUFBRTtBQWxDeUIsS0FBL0IsQ0FBbEIsQ0FGc0MsQ0F1Q3RDOztBQUNBcEIsSUFBQUEsTUFBTSxDQUFDQyxvQkFBUCxDQUE0Qm9CLElBQTVCLENBQWlDbEIsU0FBakMsRUF4Q3NDLENBMEN0Qzs7QUFDQSxRQUFJakIsS0FBSyxHQUFHaUIsU0FBUyxDQUFDakIsS0FBdEIsQ0EzQ3NDLENBNkN0Qzs7QUFDQUEsSUFBQUEsS0FBSyxDQUFDb0MsT0FBTixDQUFjckMsU0FBZDtBQUNEO0FBQ0YsQ0FwRkQiLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkge1xuICAvLyBCaW5kIGNsb3NpbmcgZnVuY3Rpb24gdG8gdGhlIGFkZGl0aW9uYWwgY2xvc2UgYnV0dG9uIGF0IHRoZSBib3R0b20gb2ZcbiAgLy8gdGhlIGNvbnRlbnQuIEZvciByZWFzb25zIHVua25vd24gdG8gbWFuIHRoZSBjbG9zZSBidXR0b24gY2Fubm90IGJlXG4gIC8vIGFjdHVhbCBidXR0b24uIElmIHlvdSBjaGFuZ2UgaXQgZnJvbSBzcGFuIHRvIGJ1dHRvbiB0aGUgY2xpY2sgZXZlbnRcbiAgLy8gaXMgbm8gbG9uZ2VyIHJlZ2lzdGVyZWQgYW5kIHRoZSBmdW5jdGlvbmFsaXR5IGRvZXNuJ3Qgd29yay5cbiAgZnVuY3Rpb24gY2xvc2VGb2xkKGZvbGRzKSB7XG4gICAgbGV0IGNsb3NlQnV0dG9uID0gZm9sZHMuY29udGVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgJy5hY2NvcmRpb24taXRlbV9fYnV0dG9uLS1jbG9zZSdcbiAgICApO1xuXG4gICAgZnVuY3Rpb24gbW92ZUZvY3VzKGVsZW1lbnQpIHtcbiAgICAgIGVsZW1lbnRcbiAgICAgICAgLmNsb3Nlc3QoJy5hY2NvcmRpb25fX3dyYXBwZXInKVxuICAgICAgICAucXVlcnlTZWxlY3RvcignLmFjY29yZGlvbi1pdGVtX19idXR0b24tLXRvZ2dsZScpXG4gICAgICAgIC5mb2N1cygpO1xuICAgIH1cblxuICAgIGNsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIGZ1bmN0aW9uIChlKSB7XG4gICAgICBmb2xkcy5jbG9zZSgpO1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgbW92ZUZvY3VzKHRoaXMpO1xuICAgIH0pO1xuXG4gICAgY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigna2V5cHJlc3MnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgaWYgKGUud2hpY2ggPT09IDEzIHx8IGUud2hpY2ggPT09IDMyKSB7XG4gICAgICAgIGZvbGRzLmNsb3NlKCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbW92ZUZvY3VzKHRoaXMpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLy8gRmluZCBhbGwgYWNjb3JkaW9ucy5cbiAgY29uc3QgYWNjb3JkaW9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2hhbmRvcmdlbCcpO1xuICB3aW5kb3cuaGFuZG9yZ2VsX2FjY29yZGlvbnMgPSBbXTtcblxuICBmb3IgKGxldCBzaW5nbGVBY2NvcmRpb24gb2YgYWNjb3JkaW9ucykge1xuICAgIC8qIGdsb2JhbCBoYW5kb3JnZWwgKi9cbiAgICBjb25zdCBhY2NvcmRpb24gPSBuZXcgaGFuZG9yZ2VsKHNpbmdsZUFjY29yZGlvbiwge1xuICAgICAgLy8gd2hldGhlciBtdWx0aXBsZSBmb2xkcyBjYW4gYmUgb3BlbmVkIGF0IG9uY2VcbiAgICAgIG11bHRpU2VsZWN0YWJsZTogZmFsc2UsXG4gICAgICAvLyB3aGV0aGVyIHRoZSBmb2xkcyBhcmUgY29sbGFwc2libGVcbiAgICAgIGNvbGxhcHNpYmxlOiB0cnVlLFxuXG4gICAgICAvLyB3aGV0aGVyIEFSSUEgYXR0cmlidXRlcyBhcmUgZW5hYmxlZFxuICAgICAgYXJpYUVuYWJsZWQ6IHRydWUsXG4gICAgICAvLyB3aGV0aGVyIFczQyBrZXlib2FyZCBzaG9ydGN1dHMgYXJlIGVuYWJsZWRcbiAgICAgIGtleWJvYXJkSW50ZXJhY3Rpb246IHRydWUsXG4gICAgICAvLyB3aGV0aGVyIHRvIGxvb3AgaGVhZGVyIGZvY3VzIChzZXRzIGZvY3VzIGJhY2sgdG8gZmlyc3QvbGFzdCBoZWFkZXIgd2hlbiBlbmQvc3RhcnQgcmVhY2hlZClcbiAgICAgIGNhcm91c2VsRm9jdXM6IHRydWUsXG5cbiAgICAgIC8vIGF0dHJpYnV0ZSBmb3IgdGhlIGhlYWRlciBvciBjb250ZW50IHRvIG9wZW4gZm9sZHMgYXQgaW5pdGlhbGl6YXRpb25cbiAgICAgIGluaXRpYWxPcGVuQXR0cmlidXRlOiAnZGF0YS1vcGVuJyxcbiAgICAgIC8vIHdoZXRoZXIgdG8gdXNlIHRyYW5zaXRpb24gYXQgaW5pdGlhbCBvcGVuXG4gICAgICBpbml0aWFsT3BlblRyYW5zaXRpb246IHRydWUsXG4gICAgICAvLyBkZWxheSB1c2VkIHRvIHNob3cgaW5pdGlhbCB0cmFuc2l0aW9uXG4gICAgICBpbml0aWFsT3BlblRyYW5zaXRpb25EZWxheTogMjAwLFxuXG4gICAgICAvLyBoZWFkZXIvY29udGVudCBjbGFzcyBpZiBmb2xkIGlzIG9wZW5cbiAgICAgIGhlYWRlck9wZW5DbGFzczogJ2hhbmRvcmdlbF9faGVhZGVyLS1vcGVuJyxcbiAgICAgIGNvbnRlbnRPcGVuQ2xhc3M6ICdoYW5kb3JnZWxfX2NvbnRlbnQtLW9wZW4nLFxuXG4gICAgICAvLyBoZWFkZXIvY29udGVudCBjbGFzcyBpZiBmb2xkIGhhcyBiZWVuIG9wZW5lZCAodHJhbnNpdGlvbiBmaW5pc2hlZClcbiAgICAgIGhlYWRlck9wZW5lZENsYXNzOiAnaGFuZG9yZ2VsX19oZWFkZXItLW9wZW5lZCcsXG4gICAgICBjb250ZW50T3BlbmVkQ2xhc3M6ICdoYW5kb3JnZWxfX2NvbnRlbnQtLW9wZW5lZCcsXG5cbiAgICAgIC8vIGhlYWRlci9jb250ZW50IGNsYXNzIGlmIGZvbGQgaGFzIGJlZW4gZm9jdXNlZFxuICAgICAgaGVhZGVyRm9jdXNDbGFzczogJ2hhbmRvcmdlbF9faGVhZGVyLS1mb2N1cycsXG4gICAgICBjb250ZW50Rm9jdXNDbGFzczogJ2hhbmRvcmdlbF9fY29udGVudC0tZm9jdXMnLFxuXG4gICAgICAvLyBoZWFkZXIvY29udGVudCBjbGFzcyBpZiBmb2xkIGlzIGRpc2FibGVkXG4gICAgICBoZWFkZXJEaXNhYmxlZENsYXNzOiAnaGFuZG9yZ2VsX19oZWFkZXItLWRpc2FibGVkJyxcbiAgICAgIGNvbnRlbnREaXNhYmxlZENsYXNzOiAnaGFuZG9yZ2VsX19jb250ZW50LS1kaXNhYmxlZCcsXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYSBnbG9iYWwgdmFyaWFibGUgc28gdGhhdCB3ZSBjYW4gb3BlbiBhY2NvcmRpb25zIHdpdGggYW5jaG9yIGxpbmtzIHdoZXJlIG5lZWRlZFxuICAgIHdpbmRvdy5oYW5kb3JnZWxfYWNjb3JkaW9ucy5wdXNoKGFjY29yZGlvbik7XG5cbiAgICAvLyBHZXQgYWxsIHRoZSBmb2xkcyBhc3NvY2lhdGVkIHRvIHRoZSBhY2NvcmRpb24uXG4gICAgbGV0IGZvbGRzID0gYWNjb3JkaW9uLmZvbGRzO1xuXG4gICAgLy8gR28gdGhyb3VnaCBlYWNoIGZvbGQuXG4gICAgZm9sZHMuZm9yRWFjaChjbG9zZUZvbGQpO1xuICB9XG59KTtcbiJdLCJmaWxlIjoiLi9zcmMvanMvYWNjb3JkaW9uLXNldHRpbmdzLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/accordion-settings.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/accordion-settings.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=accordion-settings.min.js.map