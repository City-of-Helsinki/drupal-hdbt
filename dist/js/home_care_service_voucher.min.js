!function(){"use strict";var e={getFormData:function(e,t){return{form_id:e,has_required_fields:!0,items:[{input_integer:{id:"household_size",label:t("household_size"),unit:t("unit_person"),min:1,size:2,required:!0,helper_text:t("household_size_explanation")}},{input_float:{id:"gross_income_per_month",label:t("gross_income_per_month"),unit:t("unit_euro"),min:0,size:8,required:!1,strip:"[€eE ]",helper_text:t("gross_income_per_month_explanation")}},{input_integer:{id:"monthly_usage",label:t("monthly_usage"),unit:t("unit_hour"),min:0,max:744,size:3,required:!0,helper_text:t("monthly_usage_explanation")}},{input_float:{id:"service_provider_price",label:t("service_provider_price"),unit:t("unit_euro"),min:0,size:6,required:!0,strip:"[€eE ]",helper_text:t("service_provider_price_explanation")}}]}}};var t={household_size:{fi:"Talouden koko",sv:null,en:null},household_size_explanation:{fi:"Samassa osoitteessa asuvien perheenjäsenten määrä.",sv:null,en:null},gross_income_per_month:{fi:"Talouden tulot kuukaudessa",sv:null,en:null},gross_income_per_month_explanation:{fi:"Koko talouden yhteenlasketut ansio- ja pääomatulot ennen verojen vähentämistä. Tuloihin lasketaan palkka, eläke-, vuokra- ja korkotulot sekä eläkkeensaajan hoitotuki. Jos jätät kentän tyhjäksi, lasketaan arvio korkeimman tulorajan mukaisesti.",sv:null,en:null},monthly_usage:{fi:"Kotihoidon tuntimäärä kuukaudessa",sv:null,en:null},monthly_usage_explanation:{fi:"Löydät tuntimäärän kotihoidon päätöksestä.",sv:null,en:null},service_provider_price:{fi:"Palveluntuottajan tuntihinta",sv:null,en:null},service_provider_price_explanation:{fi:"Valitsemasi palveluntuottajan tuntihinta kotihoidon palveluista.",sv:null,en:null},receipt_estimate_of_payment:{fi:"Arvio palvelusetelillä hankitusta yksityisestä kotihoidosta",sv:null,en:null},receipt_family_estimated_payment_prefix:{fi:"Omavastuuosuus eli sinulle maksettavaksi jäävä asiakasmaksu on",sv:null,en:null},receipt_family_estimated_payment_suffix:{fi:"euroa kuukaudessa.",sv:null,en:null},receipt_family_empty_income:{fi:"Arvio on laskettu korkeimman maksun mukaisesti, koska et täyttänyt laskuriin talouden kuukausituloja. ",sv:null,en:null},receipt_family_estimated_payment_explanation:{fi:"Arvio ovat suuntaa antava.  Tarkka arvo lasketaan kotihoidon päätökseen.",sv:null,en:null},receipt_estimate_is_based_on:{fi:"Arvio muodostuu seuraavasti:",sv:null,en:null},receipt_subtotal_euros_per_month:{fi:"${value} €/kk",sv:null,en:null},receipt_subtotal_euros_per_month_screenreader:{fi:"${value} euroa kuukaudessa",sv:null,en:null},receipt_homecare_total:{fi:"Palvelusetelillä hankittavan palvelun kokonaiskustannus",sv:null,en:null},receipt_city_pays_to_provider:{fi:"Kaupunki maksaa palvelusetelillä tuotetusta palvelusta yksityiselle palveluntuottajalle",sv:null,en:null},receipt_voucher_value:{fi:"Palvelusetelisi arvo on ${voucher} euroa per tunti.",sv:null,en:null},receipt_city_pays_to_provider_max:{fi:"Palvelusetelillä voidaan maksaa enintään ${covered_hours} tuntia kuukaudessa.",sv:null,en:null},receipt_client_self_payment:{fi:"Omavastuuosuus eli sinulle maksettavaksi jäävä asiakasmaksu",sv:null,en:null},receipt_additional_details:{fi:"Lisähuomiot:",sv:null,en:null},receipt_monthly_hours_are_over_covered_hours:{fi:"Kaupunki myöntää palvelusetelin ${covered_hours} tuntiin kuukaudessa asti, jonka ylittävä osuus jää kokonaan asiakkaan maksettavaksi. Tämä itse maksettava osuus on ${overflow_hours} tuntia eli ${overflow_euros} euroa.",sv:null,en:null},receipt_included_homecare:{fi:"Jos palvelu - ja hoitosuunnitelmassasi on myös kaupungin tuottamaa kotihoitoa, siitä laskutetaan erikseen kotihoidon asiakasmaksun mukaisesti.",sv:null,en:null},receipt_estimate_if_done_by_city:{fi:"Arvio kotihoidon maksusta kaupungin tuottamana:",sv:null,en:null},receipt_when_done_by_city:{fi:"Kaupungin kotihoidon tuottamana palvelun asiakasmaksu",sv:null,en:null},receipt_aria_live:{fi:"Omavastuuosuus eli sinulle maksettavaksi jäävä asiakasmaksu on ${payment} euroa kuukaudessa, lue lisätietoja lomakkeen alta.",sv:null,en:null}};class a{constructor(a,i){this.id=a;const s=JSON.parse(i),l=()=>{};function o(e,t){const a=t.household_size[e];if(a)return a;const{cutoff:i,limit:s,percent:l}=t.beyond_cutoff,n=t.beyond_cutoff.payment_class_from_usage_per_month,u=e-i,r=o(i,t);return{limit:s.multiply_n*u+s.add,percent:l.multiply_n*u+l.add,payment_class_from_usage_per_month:Object.fromEntries(Object.entries(r.payment_class_from_usage_per_month).map((([e,t])=>[e,Math.max(0,t+n.multiply_n*u+n.add)])))}}const n=()=>{const e=[];if(e.push(...this.calculator.validateBasics("household_size")),e.push(...this.calculator.validateBasics("gross_income_per_month")),e.push(...this.calculator.validateBasics("monthly_usage")),e.push(...this.calculator.validateBasics("service_provider_price")),e.length)return{error:{title:this.t("missing_input"),message:e}};const t=Number(this.calculator.getFieldValue("household_size")),a=Number(this.calculator.getFieldValue("gross_income_per_month")),i=this.calculator.getFieldValue("gross_income_per_month"),l=Number(this.calculator.getFieldValue("monthly_usage")),n=Number(this.calculator.getFieldValue("service_provider_price")),{limit:u,percent:r,payment_class_from_usage_per_month:_}=o(t,s),c=this.calculator.getMinimumRange(l,_),h=a-u,m=Math.round(100*(null!==i?this.calculator.clamp(s.voucher_limits.min,s.voucher_limits.max-h*(r/100)/s.voucher_divisor,s.voucher_limits.max):s.voucher_limits.min))/100,p=Math.min(l,s.covered_hours_per_month)*m,v=Math.max(0,l-s.covered_hours_per_month)*n,d=Math.max(0,n-m)*Math.min(l,s.covered_hours_per_month)+v,k=this.calculator.getMinimumRange(l,s.maximum_payment_from_monthly_usage),f=h*(c/100);let y=k;null!==i&&(y=this.calculator.clamp(0,f,k));let g=this.t("receipt_family_estimated_payment_explanation");const x=[{title:this.t("receipt_additional_details"),text:null}];null===i&&(g=this.t("receipt_family_empty_income")+g);const b=[];b.push({title:this.t("receipt_homecare_total"),has_details:!1,details:[],sum:this.t("receipt_subtotal_euros_per_month",{value:this.calculator.formatFinnishEuroCents(l*n)}),sum_screenreader:this.t("receipt_subtotal_euros_per_month_screenreader",{value:this.calculator.formatEuroCents(l*n)})},{title:this.t("receipt_city_pays_to_provider"),has_details:!0,details:[this.t("receipt_voucher_value",{voucher:this.calculator.formatFinnishEuroCents(m)}),this.t("receipt_city_pays_to_provider_max",{covered_hours:s.covered_hours_per_month})],sum:this.t("receipt_subtotal_euros_per_month",{value:this.calculator.formatFinnishEuroCents(p)}),sum_screenreader:this.t("receipt_subtotal_euros_per_month_screenreader",{value:this.calculator.formatEuroCents(p)})},{title:this.t("receipt_client_self_payment"),has_details:!1,details:[],sum:this.t("receipt_subtotal_euros_per_month",{value:this.calculator.formatFinnishEuroCents(d)}),sum_screenreader:this.t("receipt_subtotal_euros_per_month_screenreader",{value:this.calculator.formatEuroCents(d)})}),l>s.covered_hours_per_month&&x.push({title:null,text:this.t("receipt_monthly_hours_are_over_covered_hours",{covered_hours:s.covered_hours_per_month,overflow_hours:l-s.covered_hours_per_month,overflow_euros:this.calculator.formatFinnishEuroCents(v)})}),x.push({title:null,text:this.t("receipt_included_homecare")});const j={id:this.id,title:this.t("receipt_estimate_of_payment"),total_prefix:this.t("receipt_family_estimated_payment_prefix"),total_value:this.calculator.formatFinnishEuroCents(d),total_suffix:this.t("receipt_family_estimated_payment_suffix"),total_explanation:g,hr:!0,breakdown:[{title:this.t("receipt_estimate_is_based_on"),subtotals:b,additional_details:x},{title:this.t("receipt_estimate_if_done_by_city"),subtotals:[{title:this.t("receipt_when_done_by_city"),has_details:!1,details:[],sum:this.t("receipt_subtotal_euros_per_month",{value:this.calculator.formatFinnishEuroCents(y)}),sum_screenreader:this.t("receipt_subtotal_euros_per_month_screenreader",{value:this.calculator.formatEuroCents(y)})}],additional_details:null}]};return{receipt:this.calculator.getPartialRender("{{>receipt}}",j),ariaLive:this.t("receipt_aria_live",{payment:this.calculator.formatEuroCents(d)})}},u={submit:e=>{this.calculator.clearResult(),e.preventDefault();const t=n();this.calculator.renderResult(t)},keydown:()=>{},change:()=>{},reset:()=>{window.setTimeout(l,1),this.calculator.clearResult(),this.calculator.showAriaLiveText(this.t("reset_aria_live"))}};this.calculator=window.HelfiCalculator({name:"home_care_service_voucher",translations:t}),this.t=(e,t)=>this.calculator.translate(e,t),this.settings=this.calculator.parseSettings(i),this.calculator.init({id:a,formData:(()=>e.getFormData(this.id,this.t))(),eventHandlers:u})}}window.helfi_calculator=window.helfi_calculator||{},window.helfi_calculator.home_care_service_voucher=(e,t)=>new a(e,t)}();