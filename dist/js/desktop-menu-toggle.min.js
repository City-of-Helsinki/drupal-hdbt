/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/desktop-menu-toggle.js":
/*!***************************************!*\
  !*** ./src/js/desktop-menu-toggle.js ***!
  \***************************************/
/***/ (function() {

eval("const OPEN_CLASS = 'menu__item--open';\nconst HOVER_CLASS = 'menu__item--hover';\nfunction updateFirstChildAriaExpanded(item) {\n  let state = 'false';\n  if (item.classList.contains(OPEN_CLASS) || item.classList.contains(HOVER_CLASS)) {\n    state = 'true';\n  }\n  const firstChild = item.querySelector(':first-child .menu__toggle-button');\n  if (firstChild) {\n    firstChild.setAttribute('aria-expanded', state);\n  }\n}\nfunction closeOpenItems(element) {\n  const allOpenItems = document.querySelectorAll(`.desktop-menu .${OPEN_CLASS}`);\n  if (allOpenItems) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const item of allOpenItems) {\n      // Check that the item we are about to close is not the\n      // element-variable given to the function.\n      if (item === element) {\n        return;\n      }\n      item.classList.remove(OPEN_CLASS);\n      updateFirstChildAriaExpanded(item);\n    }\n  }\n}\nfunction toggleDesktopMenuLevel(item) {\n  const toggleButton = item.querySelector('.menu__toggle-button');\n\n  // Check if there was menu toggle button under the menu item.\n  if (toggleButton !== null) {\n    toggleButton.addEventListener('click', function toggleOpen() {\n      item.classList.toggle(OPEN_CLASS);\n      updateFirstChildAriaExpanded(item);\n    });\n  }\n}\nfunction mouseOver() {\n  closeOpenItems(this.closest('.menu__item--children'));\n  const item = this.closest('.menu__item--children');\n  item.classList.add(HOVER_CLASS);\n  updateFirstChildAriaExpanded(item);\n}\nfunction mouseLeave() {\n  this.classList.remove(HOVER_CLASS);\n  updateFirstChildAriaExpanded(this);\n}\n\n// Utility functions\n// Gets the children of the given element and skips the one that is given\n// to it as an option for skipMe.\nfunction getChildren(n, skipMe) {\n  const r = [];\n  for (; n; n = n.nextSibling) if (n.nodeType === 1 && n !== skipMe) r.push(n);\n  return r;\n}\n\n// Gets siblings and excludes itself.\nfunction getSiblings(n) {\n  return getChildren(n.parentNode.firstChild, n);\n}\ndocument.addEventListener('DOMContentLoaded', function startDesktopMenu() {\n  // Find all menu items with children menus.\n  const itemsWithChildren = document.querySelectorAll('.desktop-menu .menu--level-0 > .menu__item--children');\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const item of itemsWithChildren) {\n    if (item) {\n      const firstLevelItem = item.querySelector('.menu--level-0 > .menu__item--children > .menu__link-wrapper > a');\n      toggleDesktopMenuLevel(item);\n      firstLevelItem.addEventListener('mouseover', mouseOver, false);\n      item.addEventListener('mouseleave', mouseLeave, false);\n    }\n  }\n});\n\n// Functionality when other menu item is clicked while one is open or\n// when the user clicks outside of the menu.\nwindow.addEventListener('click', function onMainNavigationClick(event) {\n  // First make sure that clicks inside the menu are ignored unless the\n  // click is to a menu-link that needs to open another sub menu.\n  if (document.querySelector('[data-hdbt-selector=\"main-navigation\"]').contains(event.target)) {\n    let clickedElement = event.target;\n    if (clickedElement.classList.contains('menu__toggle-button-icon')) {\n      clickedElement = clickedElement.parentElement;\n    }\n    if (clickedElement.classList.contains('menu__toggle-button')) {\n      const clickedElementParent = clickedElement.parentElement.closest('.menu__item--children');\n      const clickedElementSiblings = getSiblings(clickedElementParent);\n\n      // Loop through all siblings and if there is some open, close them.\n      for (let i = 0; i < clickedElementSiblings.length; i++) {\n        if (clickedElementSiblings[i].classList.contains(OPEN_CLASS)) {\n          clickedElementSiblings[i].classList.remove(OPEN_CLASS);\n          updateFirstChildAriaExpanded(clickedElementSiblings[i]);\n        }\n      }\n    }\n  } else {\n    closeOpenItems();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/desktop-menu-toggle.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/desktop-menu-toggle.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=desktop-menu-toggle.min.js.map