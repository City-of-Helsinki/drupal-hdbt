/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/chat-trigger.js":
/*!********************************!*\
  !*** ./src/js/chat-trigger.js ***!
  \********************************/
/***/ (function() {

eval("// This script replaces chat trigger placeholder elements with buttons that open the chat.\n(function chatTriggerWrapper() {\n  const triggerTranslations = {\n    fallback: {\n      fi: 'Chatti ei ole saatavilla.',\n      sv: 'Chatten är inte tillgänglig.',\n      en: 'The chat is not available.'\n    },\n    openChat: {\n      fi: 'Avaa chat',\n      sv: 'Öppna chatten',\n      en: 'Open the chat'\n    }\n  };\n\n  /**\n   * Waits for an element to appear in the DOM and resolves with the element.\n   *\n   * @param {string} selector - The CSS selector of the element to wait for.\n   * @return {Promise<Element>} A promise that resolves with the element once it appears in the DOM.\n   */\n  function waitForElement(selector) {\n    return new Promise(resolve => {\n      // First check, if the element exists already.\n      const element = document.querySelector(selector);\n      if (element) {\n        resolve(element);\n      } else {\n        // If not, wait for it to appear.\n        const observer = new MutationObserver(() => {\n          const elem = document.querySelector(selector);\n          if (elem) {\n            observer.disconnect();\n            resolve(elem);\n          }\n        });\n        observer.observe(document.documentElement, {\n          childList: true,\n          subtree: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Try to find the chat trigger placeholder elements and replace them with buttons that open the chat.\n   */\n  function init() {\n    // Find all chat trigger placeholder elements.\n    const placeholders = document.querySelectorAll('p[data-chat-trigger]');\n\n    // Get the language, fallback to english.\n    const lang = window?.drupalSettings?.path?.currentLanguage || 'en';\n\n    // Iterate over each placeholder.\n    placeholders.forEach(placeholder => {\n      // Get target selector from attribute\n      const targetSelector = placeholder.dataset.chatTrigger;\n\n      // The trigger is present but the chat is not available, show fallback until chat is available.\n      if (!document.querySelector(targetSelector)) {\n        const content = triggerTranslations.fallback[lang] || triggerTranslations.fallback.en;\n        placeholder.textContent = content;\n      }\n\n      // Wait for the target element to appear in the DOM and replace the trigger with a button that opens the chat.\n      waitForElement(targetSelector).then(() => {\n        const triggerButton = document.createElement('button');\n        triggerButton.textContent = triggerTranslations.openChat[lang] || triggerTranslations.openChat.en;\n        triggerButton.dataset.hdsComponent = 'button';\n        triggerButton.dataset.hdsVariant = 'secondary';\n        triggerButton.dataset.clickSelector = targetSelector;\n        triggerButton.addEventListener('click', event => {\n          const selector = event.target?.dataset?.clickSelector;\n          if (selector) {\n            const clickTarget = document.querySelector(selector);\n            if (clickTarget) {\n              clickTarget.click();\n            }\n          }\n        });\n        placeholder.removeAttribute('data-chat-trigger');\n        placeholder.innerHTML = '';\n        placeholder.appendChild(triggerButton);\n      });\n    });\n  }\n  window.addEventListener('DOMContentLoaded', init);\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/chat-trigger.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/chat-trigger.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=chat-trigger.min.js.map