/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/embedded-content-cookie-compliance.js":
/*!******************************************************!*\
  !*** ./src/js/embedded-content-cookie-compliance.js ***!
  \******************************************************/
/***/ (function() {

eval("/**\n * @file\n * Load embedded content once the user has approved required cookie category.\n */\n// eslint-disable-next-line func-names\n(function ($, Drupal, drupalSettings) {\n  // Check whether the given cookie categories have been accepted.\n  const categoriesAgreed = categories => {\n    // Set default categories if none exists.\n    if (!categories) {\n      categories = ['preferences', 'statistics'];\n    }\n    return Drupal.cookieConsent.getConsentStatus(categories);\n  };\n  const loadEmbeddedContent = () => {\n    Object.entries(drupalSettings?.embedded_media_attributes || {}).forEach(([id, attributes]) => {\n      if (!categoriesAgreed(attributes?.cookieConsentGroups)) {\n        return;\n      }\n      const mediaContainers = $(`.embedded-content-cookie-compliance.media-${id}`);\n\n      // Each of the media type is grouped to their own\n      // mediaContainers so we need to iterate through them.\n      mediaContainers.each(function processMediaContainer(index) {\n        const mediaContainer = $(this);\n        const iframeElement = document.createElement('iframe');\n        iframeElement.classList.add('media-oembed-content');\n        iframeElement.src = attributes.src;\n        iframeElement.title = attributes.title;\n        if (attributes.allow) {\n          iframeElement.allow = attributes.allow;\n        }\n        if (attributes.height) {\n          iframeElement.height = attributes.height;\n        }\n        if (attributes.width) {\n          iframeElement.width = attributes.width;\n        }\n        const containerElement = document.createElement('div');\n        containerElement.appendChild(iframeElement);\n\n        // Extract the media name from the wrapping component title or in\n        // case of video, from the remote video - video title.\n        // Fallback to empty if no title is set.\n        let mediaName = '';\n        switch (attributes.type) {\n          case 'video':\n            mediaName = mediaContainer.parent().siblings('.remote-video__video-title').text().trim() || '';\n            break;\n          default:\n            mediaName = mediaContainer.closest(`.component__content.${attributes.type}`).siblings('.component__title').text().trim() || '';\n            break;\n        }\n\n        // Initialize skip links elements.\n        const skipLinkBefore = document.createElement('a');\n        const skipLinkAfter = document.createElement('a');\n\n        // Construct skip links if their IDs are set.\n        if (attributes.skipLinkBeforeId && attributes.skipLinkAfterId) {\n          skipLinkBefore.classList.add('focusable', 'skip-link');\n          skipLinkBefore.href = `#${attributes.skipLinkAfterId}-${index}`;\n          skipLinkBefore.id = `${attributes.skipLinkBeforeId}-${index}`;\n          skipLinkAfter.classList.add('focusable', 'skip-link');\n          skipLinkAfter.href = `#${attributes.skipLinkBeforeId}-${index}`;\n          skipLinkAfter.id = `${attributes.skipLinkAfterId}-${index}`;\n        }\n        switch (attributes.type) {\n          case 'video':\n            containerElement.classList.add(`responsive-${attributes.type}-container`);\n            skipLinkAfter.classList.add('skip-link--video--after');\n            skipLinkBefore.classList.add('skip-link--video--before');\n\n            // Adjust the skip link text based on whether the mediaName is found.\n            skipLinkAfter.text = Drupal.t('Continue above the @video video', {\n              '@video': mediaName\n            }, {\n              context: 'Skip links'\n            });\n            skipLinkBefore.text = Drupal.t('Continue below the @video video', {\n              '@video': mediaName\n            }, {\n              context: 'Skip links'\n            });\n            mediaContainer.replaceWith(skipLinkBefore, containerElement, skipLinkAfter);\n            break;\n          case 'chart':\n            containerElement.classList.add(`responsive-${attributes.type}-container`);\n            skipLinkAfter.classList.add('skip-link--chart--after');\n            skipLinkBefore.classList.add('skip-link--chart--before');\n\n            // Adjust the skip link text based on whether the mediaName is found.\n            skipLinkAfter.text = mediaName ? Drupal.t('Continue above the @chart chart', {\n              '@chart': mediaName\n            }, {\n              context: 'Skip links'\n            }) : Drupal.t('Continue above the chart', {}, {\n              context: 'Skip links'\n            });\n            skipLinkBefore.text = mediaName ? Drupal.t('Continue below the @chart chart', {\n              '@chart': mediaName\n            }, {\n              context: 'Skip links'\n            }) : Drupal.t('Continue below the chart', {}, {\n              context: 'Skip links'\n            });\n            mediaContainer.replaceWith(skipLinkBefore, containerElement, skipLinkAfter);\n            break;\n          case 'journey_planner':\n            containerElement.classList.add('journey-planner-container');\n            skipLinkAfter.classList.add('skip-link--planner--after');\n            skipLinkBefore.classList.add('skip-link--planner--before');\n            skipLinkAfter.text = Drupal.t('Continue above the journey planner', {}, {\n              context: 'Skip links'\n            });\n            skipLinkBefore.text = Drupal.t('Continue below the journey planner', {}, {\n              context: 'Skip links'\n            });\n            mediaContainer.replaceWith(skipLinkBefore, containerElement, skipLinkAfter);\n            break;\n          case 'map':\n            containerElement.classList.add('responsive-map-container');\n            skipLinkAfter.classList.add('skip-link--map--after');\n            skipLinkBefore.classList.add('skip-link--map--before');\n\n            // Adjust the skip link text based on whether the mediaName is found.\n            skipLinkAfter.text = mediaName ? Drupal.t('Continue above the @map map', {\n              '@map': mediaName\n            }, {\n              context: 'Skip links'\n            }) : Drupal.t('Continue above the map', {}, {\n              context: 'Skip links'\n            });\n            skipLinkBefore.text = mediaName ? Drupal.t('Continue below the @map map', {\n              '@map': mediaName\n            }, {\n              context: 'Skip links'\n            }) : Drupal.t('Continue below the map', {}, {\n              context: 'Skip links'\n            });\n            mediaContainer.replaceWith(skipLinkBefore, containerElement, skipLinkAfter);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  };\n\n  // Remove noscript element.\n  $('.embedded-content-cookie-compliance .js-remove').remove();\n  if (Drupal.cookieConsent.initialized()) {\n    loadEmbeddedContent();\n  } else {\n    Drupal.cookieConsent.loadFunction(loadEmbeddedContent);\n  }\n})(jQuery, Drupal, drupalSettings);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/embedded-content-cookie-compliance.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/embedded-content-cookie-compliance.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=embedded-content-cookie-compliance.min.js.map