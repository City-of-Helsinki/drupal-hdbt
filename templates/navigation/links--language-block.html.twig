{#
/**
 * @file
 * Theme override for a set of links.
 *
 * Available variables:
 * - attributes: Attributes for the UL containing the list of links.
 * - links: Links to be output.
 *   Each link will have the following elements:
 *   - title: The link text.
 *   - href: The link URL. If omitted, the 'title' is shown as a plain text
 *     item in the links list. If 'href' is supplied, the entire link is passed
 *     to l() as its $options parameter.
 *   - attributes: (optional) HTML attributes for the anchor, or for the <span>
 *     tag if no 'href' is supplied.
 * - heading: (optional) A heading to precede the links.
 *   - text: The heading text.
 *   - level: The heading level (e.g. 'h2', 'h3').
 *   - attributes: (optional) A keyed list of attributes for the heading.
 *   If the heading is a string, it will be used as the text of the heading and
 *   the level will default to 'h2'.
 *
 *   Headings should be used on navigation menus and any list of links that
 *   consistently appears on multiple pages. To make the heading invisible use
 *   the 'visually-hidden' CSS class. Do not use 'display:none', which
 *   removes it from screen readers and assistive technology. Headings allow
 *   screen reader and keyboard only users to navigate to or skip the links.
 *   See http://juicystudio.com/article/screen-readers-display-none.php and
 *   http://www.w3.org/TR/WCAG-TECHS/H42.html for more information.
 *
 * @see template_preprocess_links()
 */
#}

{% if links %}
  <div {{ attributes.addClass('language-switcher') }}>
    <button id="language-switcher-toggle" class="language-switcher__button" aria-expanded="false" aria-controls="language-switcher-dropdown" aria-expanded="false" aria-haspopup="true" aria-label="{{ 'Select language'|t }}">
      <span class="icon--globe" aria-hidden="true">
        {% include "@hdbt/misc/icon.twig" with {icon: 'globe', label: current_language } %}
      </span>
      <span class="icon--angle-down" aria-hidden="true">
        {% include "@hdbt/misc/icon.twig" with {icon: 'angle-down', label: current_language } %}
      </span>
      {% if current_language %}
        <span class="label" aria-label="{{ 'Current language is'|t }} {{ current_language|capitalize }}">{{ current_language|capitalize }}</span>
      {% endif %}
    </button>
    <div aria-hidden="true" id="language-switcher-dropdown" class="language-switcher__dropdown">
      <div class="language-links">
        {% for item in links %}
          {% set language_link = '' %}
          {% set lang = item.link['#options']['#abbreviation'] %}
          {% set untranslated = item.link['#options']['#untranslated'] %}
          {% set alternative_language = item.link['#options']['#alternative_language'] %}
          {% set classes = ['language-link'] %}

          {# Check if link is part of alternative menu and set class accordingly. #}
          {% set classes = classes|merge([alternative_language ? 'is-alternative' : '']) %}

          {% if not untranslated and lang != current_langcode %}
            {% set language_link = path('<current>', {}, {'language': item.link['#options']['language']}) %}
            {% set element = 'a' %}
          {% elseif lang == current_langcode %}
            {% set element = 'span' %}
            {% set classes = classes|merge([lang == current_langcode ? 'is-active' : '']) %}
          {% else %}
            {% set element = 'span' %}
            {% set classes = classes|merge(['is-disabled']) %}
          {% endif %}

          {# Construct the element based on variables. #}
          {# TODO: Find out the best way to indicate inactive languages from accessibility point of view #}
          <{{ element }}
            {{ create_attribute({'class': classes}) }}
            {{ language_link ? create_attribute({'href': language_link}) }}
            {{ element == 'a' ? create_attribute({'lang': lang}) }}
          >{{ item.text|capitalize }}</{{ element }}>
        {% endfor %}
      </div>
    </div>
  </div>
{% endif %}
