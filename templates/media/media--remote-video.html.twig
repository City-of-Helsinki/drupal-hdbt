{#
/**
 * @file
 * Theme override to present a media item.
 *
 * Available variables:
 * - media: The media item, with limited access to object properties and
 *   methods. Only method names starting with "get", "has", or "is" and
 *   a few common methods such as "id", "label", and "bundle" are available.
 *   For example:
 *   - entity.getEntityTypeId() will return the entity type ID.
 *   - entity.hasField('field_example') returns TRUE if the entity includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   Calling other methods, such as entity.delete(), will result in
 *   an exception.
 *   See \Drupal\Core\Entity\EntityInterface for a full list of methods.
 * - name: Name of the media item.
 * - content: Media content.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - attributes: HTML attributes for the containing element.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - privacy_policy_url: The URL for the privacy policy page.
 *
 * @see template_preprocess_media()
 */
#}
{% set media_id = media.id() %}
{% set media_url = media.field_media_oembed_video.0.value %}
{% set media_attributes = content.field_media_oembed_video.0['#attributes'] %}
{% set iframe_title = media.getMediaTitle() %}
{% set service_url = media.getServiceUrl() %}
{% set privacy_policy_url = media.getPrivacyPolicyUrl() %}
{% set cookie_consent_groups = ['preferences', 'statistics'] %}

{% set skip_link_after = 'video-' ~ media_id ~ random() ~ '-after'|clean_id %}
{% set skip_link_before = 'video-' ~ media_id ~ random() ~ '-before'|clean_id %}

{% if not media_attributes.src is null %}
  {% include '@hdbt/misc/embedded-content-cookie-compliance.twig' with {
    media_url: media_url,
    media_id: media.id,
    media_iframe_title: iframe_title,
    media_service_url: service_url,
    privacy_policy_url: privacy_policy_url,
    cookie_consent_groups: cookie_consent_groups,
  } %}

  {% set drupal_settings = {
    '#attached': {
      'drupalSettings': {
        'embedded_media_attributes': {
          (media.id): {
            'src': media_attributes.src,
            'height': media_attributes.height,
            'width': media_attributes.width,
            'title': 'Video: ' ~ iframe_title,
            'type': 'video',
            'skipLinkAfterId' : skip_link_after,
            'skipLinkBeforeId' : skip_link_before,
            'cookieConsentGroups' : cookie_consent_groups,
          }
        }
      }
    }
  } %}

  {{ drupal_settings }}
  {{ attach_library(media.getJsLibrary()) }}
{% endif %}
